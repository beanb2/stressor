% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.R, R/cv_lm.R, R/cv_mlm_stressor.R,
%   R/cv_reg_asym.R, R/cv_reg_sine.R
\name{cv}
\alias{cv}
\alias{cv.lm}
\alias{cv.mlm_stressor}
\alias{cv.reg_asym}
\alias{cv.reg_sine}
\title{Cross Validation}
\usage{
cv(object, data, n_folds = 10, k_mult = NULL)

\method{cv}{lm}(object, data, n_folds = 10, k_mult = NULL)

\method{cv}{mlm_stressor}(object, data, n_folds = 10, k_mult = NULL)

\method{cv}{reg_asym}(object, data, n_folds = 10, k_mult = NULL)

\method{cv}{reg_sine}(object, data, n_folds = 10, k_mult = NULL)
}
\arguments{
\item{object}{One of the four objects that is accepted mlm_stressor,
reg_sine, reg_asym, or lm.}

\item{data}{A data frame object that contains all the entries to be cross-
validated on.}

\item{n_folds}{An integer value for the number of folds defaulted to 10. If
NULL, it will run LOO cross validation.}

\item{k_mult}{Used to specify if k-means clustering is to be used, defaulted
to NULL.}
}
\value{
If the object is of class mlm_stressor then a data frame will be
  returned otherwise a vector of the predictions will be returned.
}
\description{
This is core of cross validation both standard and using k-mean groups. This
 method is called by other cv methods of classes.
}
\section{Methods (by class)}{
\itemize{
\item \code{lm}: Cross Validation for lm

\item \code{mlm_stressor}: Cross Validation for mlm_stressor

\item \code{reg_asym}: Cross Validation for reg_asym

\item \code{reg_sine}: Cross Validation for reg_sine
}}

\examples{
 # lm example
 lm_test <- data_gen_lm(10)
 lm <- lm(Y ~ ., lm_test)
 cv(lm, lm_test, n_folds = 5)

 # Machine Learning Models example
 lm_test <- data_gen_lm(10)
 create_virtualenv()
 mlm_lm <- mlm_regressor(Y ~ ., lm_test, example = TRUE)
 cv(mlm_lm, lm_test, n_folds = 5)

 # Asymptotic example
 asym_data <- data_gen_asym(10)
 asym_fit <- reg_asym(Y ~ ., asym_data)
 cv(asym_fit, asym_data, n_folds = 5)

 # Sine example
 sine_data <- data_gen_sine(10)
 sine_fit <- reg_sine(Y ~ ., sine_data)
 cv(sine_fit, sine_data, n_folds = 5)
}
