2023-05-09 11:08:54,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:08:54,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:08:54,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:08:54,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:09:00,448:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-09 11:09:07,430:INFO:PyCaret RegressionExperiment
2023-05-09 11:09:07,430:INFO:Logging name: reg-default-name
2023-05-09 11:09:07,430:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-09 11:09:07,430:INFO:version 3.0.0
2023-05-09 11:09:07,431:INFO:Initializing setup()
2023-05-09 11:09:07,431:INFO:self.USI: c5dc
2023-05-09 11:09:07,431:INFO:self._variable_keys: {'logging_param', 'log_plots_param', 'data', 'idx', 'n_jobs_param', 'html_param', 'exp_name_log', '_available_plots', 'fold_generator', 'memory', 'gpu_param', 'USI', 'y_train', 'y', 'target_param', 'fold_groups_param', '_ml_usecase', 'pipeline', 'transform_target_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X', 'fold_shuffle_param', 'y_test', 'seed', 'X_test'}
2023-05-09 11:09:07,431:INFO:Checking environment
2023-05-09 11:09:07,431:INFO:python_version: 3.8.10
2023-05-09 11:09:07,431:INFO:python_build: ('tags/v3.8.10:3d8993a', 'May  3 2021 11:48:03')
2023-05-09 11:09:07,431:INFO:machine: AMD64
2023-05-09 11:09:07,431:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-09 11:09:07,437:INFO:Memory: svmem(total=7896625152, available=981356544, percent=87.6, used=6915268608, free=981356544)
2023-05-09 11:09:07,437:INFO:Physical Core: 8
2023-05-09 11:09:07,437:INFO:Logical Core: 16
2023-05-09 11:09:07,437:INFO:Checking libraries
2023-05-09 11:09:07,438:INFO:System:
2023-05-09 11:09:07,438:INFO:    python: 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
2023-05-09 11:09:07,438:INFO:executable: C:/Users/14357/Documents/.virtualenvs/stressor-env2023-05-09104458/Scripts/python.exe
2023-05-09 11:09:07,438:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-09 11:09:07,438:INFO:PyCaret required dependencies:
2023-05-09 11:09:07,438:INFO:                 pip: 23.1.2
2023-05-09 11:09:07,438:INFO:          setuptools: 67.7.2
2023-05-09 11:09:07,438:INFO:             pycaret: 3.0.0
2023-05-09 11:09:07,438:INFO:             IPython: 8.12.2
2023-05-09 11:09:07,438:INFO:          ipywidgets: 8.0.6
2023-05-09 11:09:07,438:INFO:                tqdm: 4.65.0
2023-05-09 11:09:07,438:INFO:               numpy: 1.24.3
2023-05-09 11:09:07,438:INFO:              pandas: 1.5.3
2023-05-09 11:09:07,438:INFO:              jinja2: 3.1.2
2023-05-09 11:09:07,438:INFO:               scipy: 1.10.1
2023-05-09 11:09:07,438:INFO:              joblib: 1.2.0
2023-05-09 11:09:07,438:INFO:             sklearn: 1.2.2
2023-05-09 11:09:07,438:INFO:                pyod: 1.0.9
2023-05-09 11:09:07,438:INFO:            imblearn: 0.10.1
2023-05-09 11:09:07,438:INFO:   category_encoders: 2.6.0
2023-05-09 11:09:07,438:INFO:            lightgbm: 3.3.5
2023-05-09 11:09:07,438:INFO:               numba: 0.57.0
2023-05-09 11:09:07,438:INFO:            requests: 2.30.0
2023-05-09 11:09:07,438:INFO:          matplotlib: 3.7.1
2023-05-09 11:09:07,438:INFO:          scikitplot: 0.3.7
2023-05-09 11:09:07,438:INFO:         yellowbrick: 1.5
2023-05-09 11:09:07,438:INFO:              plotly: 5.14.1
2023-05-09 11:09:07,438:INFO:             kaleido: 0.2.1
2023-05-09 11:09:07,438:INFO:         statsmodels: 0.14.0
2023-05-09 11:09:07,438:INFO:              sktime: 0.18.0
2023-05-09 11:09:07,438:INFO:               tbats: 1.1.3
2023-05-09 11:09:07,438:INFO:            pmdarima: 2.0.3
2023-05-09 11:09:07,438:INFO:              psutil: 5.9.5
2023-05-09 11:09:07,438:INFO:PyCaret optional dependencies:
2023-05-09 11:09:07,461:INFO:                shap: Not installed
2023-05-09 11:09:07,461:INFO:           interpret: Not installed
2023-05-09 11:09:07,461:INFO:                umap: Not installed
2023-05-09 11:09:07,461:INFO:    pandas_profiling: Not installed
2023-05-09 11:09:07,461:INFO:  explainerdashboard: Not installed
2023-05-09 11:09:07,461:INFO:             autoviz: Not installed
2023-05-09 11:09:07,461:INFO:           fairlearn: Not installed
2023-05-09 11:09:07,461:INFO:             xgboost: Not installed
2023-05-09 11:09:07,461:INFO:            catboost: Not installed
2023-05-09 11:09:07,461:INFO:              kmodes: Not installed
2023-05-09 11:09:07,461:INFO:             mlxtend: Not installed
2023-05-09 11:09:07,461:INFO:       statsforecast: Not installed
2023-05-09 11:09:07,462:INFO:        tune_sklearn: Not installed
2023-05-09 11:09:07,462:INFO:                 ray: Not installed
2023-05-09 11:09:07,462:INFO:            hyperopt: Not installed
2023-05-09 11:09:07,462:INFO:              optuna: Not installed
2023-05-09 11:09:07,462:INFO:               skopt: Not installed
2023-05-09 11:09:07,462:INFO:              mlflow: Not installed
2023-05-09 11:09:07,462:INFO:              gradio: Not installed
2023-05-09 11:09:07,462:INFO:             fastapi: Not installed
2023-05-09 11:09:07,462:INFO:             uvicorn: Not installed
2023-05-09 11:09:07,462:INFO:              m2cgen: Not installed
2023-05-09 11:09:07,462:INFO:           evidently: Not installed
2023-05-09 11:09:07,462:INFO:               fugue: Not installed
2023-05-09 11:09:07,462:INFO:           streamlit: Not installed
2023-05-09 11:09:07,462:INFO:             prophet: Not installed
2023-05-09 11:09:07,462:INFO:None
2023-05-09 11:09:07,462:INFO:Set up data.
2023-05-09 11:09:07,468:INFO:Set up train/test split.
2023-05-09 11:09:07,472:INFO:Set up index.
2023-05-09 11:09:07,472:INFO:Set up folding strategy.
2023-05-09 11:09:07,472:INFO:Assigning column types.
2023-05-09 11:09:07,475:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-09 11:09:07,476:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,482:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,487:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,554:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,692:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,696:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,700:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,799:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-09 11:09:07,803:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,958:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:07,964:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:09:07,968:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,069:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-09 11:09:08,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,178:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,353:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-09 11:09:08,420:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,575:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-09 11:09:08,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:09:08,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,791:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-09 11:09:08,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:08,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,008:INFO:Preparing preprocessing pipeline...
2023-05-09 11:09:09,008:INFO:Set up simple imputation.
2023-05-09 11:09:09,035:INFO:Finished creating preprocessing pipeline.
2023-05-09 11:09:09,046:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\14357\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crim', 'zn', 'indus', 'nox', 'rm',
                                             'age', 'dis', 'rad', 'tax',
                                             'ptratio', 'b', 'lstat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-05-09 11:09:09,046:INFO:Creating final display dataframe.
2023-05-09 11:09:09,120:INFO:Setup _display_container:                     Description             Value
0                    Session id              4509
1                        Target             cmedv
2                   Target type        Regression
3           Original data shape         (456, 13)
4        Transformed data shape         (456, 13)
5   Transformed train set shape         (319, 13)
6    Transformed test set shape         (137, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                 1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c5dc
2023-05-09 11:09:09,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:09:09,340:INFO:setup() successfully completed in 1.93s...............
2023-05-09 11:09:09,341:INFO:Initializing compare_models()
2023-05-09 11:09:09,342:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, include=['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], fold=None, round=4, cross_validation=True, sort=RMSE, n_select=9999, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, 'include': ['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 9999, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-09 11:09:09,342:INFO:Checking exceptions
2023-05-09 11:09:09,343:INFO:Preparing display monitor
2023-05-09 11:09:09,362:INFO:Initializing AdaBoost Regressor
2023-05-09 11:09:09,362:INFO:Total runtime is 0.0 minutes
2023-05-09 11:09:09,362:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:09,362:INFO:Initializing create_model()
2023-05-09 11:09:09,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:09,362:INFO:Checking exceptions
2023-05-09 11:09:09,362:INFO:Importing libraries
2023-05-09 11:09:09,362:INFO:Copying training dataset
2023-05-09 11:09:09,365:INFO:Defining folds
2023-05-09 11:09:09,365:INFO:Declaring metric variables
2023-05-09 11:09:09,365:INFO:Importing untrained model
2023-05-09 11:09:09,365:INFO:AdaBoost Regressor Imported successfully
2023-05-09 11:09:09,365:INFO:Starting cross validation
2023-05-09 11:09:09,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:10,477:INFO:Calculating mean and std
2023-05-09 11:09:10,489:INFO:Creating metrics dataframe
2023-05-09 11:09:10,494:INFO:Uploading results into container
2023-05-09 11:09:10,494:INFO:Uploading model into container now
2023-05-09 11:09:10,494:INFO:_master_model_container: 1
2023-05-09 11:09:10,494:INFO:_display_container: 2
2023-05-09 11:09:10,495:INFO:AdaBoostRegressor(random_state=4509)
2023-05-09 11:09:10,495:INFO:create_model() successfully completed......................................
2023-05-09 11:09:10,566:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:10,566:INFO:Creating metrics dataframe
2023-05-09 11:09:10,569:INFO:Initializing Extra Trees Regressor
2023-05-09 11:09:10,569:INFO:Total runtime is 0.0201225479443868 minutes
2023-05-09 11:09:10,569:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:10,570:INFO:Initializing create_model()
2023-05-09 11:09:10,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:10,570:INFO:Checking exceptions
2023-05-09 11:09:10,570:INFO:Importing libraries
2023-05-09 11:09:10,570:INFO:Copying training dataset
2023-05-09 11:09:10,572:INFO:Defining folds
2023-05-09 11:09:10,572:INFO:Declaring metric variables
2023-05-09 11:09:10,572:INFO:Importing untrained model
2023-05-09 11:09:10,572:INFO:Extra Trees Regressor Imported successfully
2023-05-09 11:09:10,573:INFO:Starting cross validation
2023-05-09 11:09:10,573:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:13,049:INFO:Calculating mean and std
2023-05-09 11:09:13,049:INFO:Creating metrics dataframe
2023-05-09 11:09:13,056:INFO:Uploading results into container
2023-05-09 11:09:13,056:INFO:Uploading model into container now
2023-05-09 11:09:13,057:INFO:_master_model_container: 2
2023-05-09 11:09:13,057:INFO:_display_container: 2
2023-05-09 11:09:13,057:INFO:ExtraTreesRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:13,057:INFO:create_model() successfully completed......................................
2023-05-09 11:09:13,124:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:13,124:INFO:Creating metrics dataframe
2023-05-09 11:09:13,127:INFO:Initializing Light Gradient Boosting Machine
2023-05-09 11:09:13,127:INFO:Total runtime is 0.06276134649912517 minutes
2023-05-09 11:09:13,127:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:13,127:INFO:Initializing create_model()
2023-05-09 11:09:13,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:13,128:INFO:Checking exceptions
2023-05-09 11:09:13,128:INFO:Importing libraries
2023-05-09 11:09:13,128:INFO:Copying training dataset
2023-05-09 11:09:13,131:INFO:Defining folds
2023-05-09 11:09:13,131:INFO:Declaring metric variables
2023-05-09 11:09:13,131:INFO:Importing untrained model
2023-05-09 11:09:13,131:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 11:09:13,132:INFO:Starting cross validation
2023-05-09 11:09:13,132:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:13,736:INFO:Calculating mean and std
2023-05-09 11:09:13,737:INFO:Creating metrics dataframe
2023-05-09 11:09:13,743:INFO:Uploading results into container
2023-05-09 11:09:13,744:INFO:Uploading model into container now
2023-05-09 11:09:13,744:INFO:_master_model_container: 3
2023-05-09 11:09:13,744:INFO:_display_container: 2
2023-05-09 11:09:13,744:INFO:LGBMRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:13,744:INFO:create_model() successfully completed......................................
2023-05-09 11:09:13,809:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:13,809:INFO:Creating metrics dataframe
2023-05-09 11:09:13,813:INFO:Initializing Gradient Boosting Regressor
2023-05-09 11:09:13,813:INFO:Total runtime is 0.07419062852859498 minutes
2023-05-09 11:09:13,813:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:13,813:INFO:Initializing create_model()
2023-05-09 11:09:13,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:13,813:INFO:Checking exceptions
2023-05-09 11:09:13,813:INFO:Importing libraries
2023-05-09 11:09:13,813:INFO:Copying training dataset
2023-05-09 11:09:13,816:INFO:Defining folds
2023-05-09 11:09:13,816:INFO:Declaring metric variables
2023-05-09 11:09:13,816:INFO:Importing untrained model
2023-05-09 11:09:13,816:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 11:09:13,816:INFO:Starting cross validation
2023-05-09 11:09:13,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:15,404:INFO:Calculating mean and std
2023-05-09 11:09:15,404:INFO:Creating metrics dataframe
2023-05-09 11:09:15,412:INFO:Uploading results into container
2023-05-09 11:09:15,412:INFO:Uploading model into container now
2023-05-09 11:09:15,412:INFO:_master_model_container: 4
2023-05-09 11:09:15,412:INFO:_display_container: 2
2023-05-09 11:09:15,413:INFO:GradientBoostingRegressor(random_state=4509)
2023-05-09 11:09:15,413:INFO:create_model() successfully completed......................................
2023-05-09 11:09:15,484:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:15,484:INFO:Creating metrics dataframe
2023-05-09 11:09:15,487:INFO:Initializing Linear Regression
2023-05-09 11:09:15,488:INFO:Total runtime is 0.10211074749628704 minutes
2023-05-09 11:09:15,488:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:15,488:INFO:Initializing create_model()
2023-05-09 11:09:15,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:15,488:INFO:Checking exceptions
2023-05-09 11:09:15,488:INFO:Importing libraries
2023-05-09 11:09:15,488:INFO:Copying training dataset
2023-05-09 11:09:15,491:INFO:Defining folds
2023-05-09 11:09:15,491:INFO:Declaring metric variables
2023-05-09 11:09:15,491:INFO:Importing untrained model
2023-05-09 11:09:15,492:INFO:Linear Regression Imported successfully
2023-05-09 11:09:15,492:INFO:Starting cross validation
2023-05-09 11:09:15,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:15,924:INFO:Calculating mean and std
2023-05-09 11:09:15,926:INFO:Creating metrics dataframe
2023-05-09 11:09:15,933:INFO:Uploading results into container
2023-05-09 11:09:15,934:INFO:Uploading model into container now
2023-05-09 11:09:15,934:INFO:_master_model_container: 5
2023-05-09 11:09:15,934:INFO:_display_container: 2
2023-05-09 11:09:15,934:INFO:LinearRegression(n_jobs=1)
2023-05-09 11:09:15,934:INFO:create_model() successfully completed......................................
2023-05-09 11:09:16,004:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:16,004:INFO:Creating metrics dataframe
2023-05-09 11:09:16,007:INFO:Initializing Random Forest Regressor
2023-05-09 11:09:16,007:INFO:Total runtime is 0.11076154311498007 minutes
2023-05-09 11:09:16,007:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:16,007:INFO:Initializing create_model()
2023-05-09 11:09:16,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:16,007:INFO:Checking exceptions
2023-05-09 11:09:16,008:INFO:Importing libraries
2023-05-09 11:09:16,008:INFO:Copying training dataset
2023-05-09 11:09:16,011:INFO:Defining folds
2023-05-09 11:09:16,011:INFO:Declaring metric variables
2023-05-09 11:09:16,011:INFO:Importing untrained model
2023-05-09 11:09:16,011:INFO:Random Forest Regressor Imported successfully
2023-05-09 11:09:16,011:INFO:Starting cross validation
2023-05-09 11:09:16,012:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:19,656:INFO:Calculating mean and std
2023-05-09 11:09:19,657:INFO:Creating metrics dataframe
2023-05-09 11:09:19,667:INFO:Uploading results into container
2023-05-09 11:09:19,667:INFO:Uploading model into container now
2023-05-09 11:09:19,668:INFO:_master_model_container: 6
2023-05-09 11:09:19,668:INFO:_display_container: 2
2023-05-09 11:09:19,668:INFO:RandomForestRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:19,668:INFO:create_model() successfully completed......................................
2023-05-09 11:09:19,739:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:19,739:INFO:Creating metrics dataframe
2023-05-09 11:09:19,743:INFO:Initializing Ridge Regression
2023-05-09 11:09:19,743:INFO:Total runtime is 0.17302161057790122 minutes
2023-05-09 11:09:19,743:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:19,743:INFO:Initializing create_model()
2023-05-09 11:09:19,743:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:19,743:INFO:Checking exceptions
2023-05-09 11:09:19,743:INFO:Importing libraries
2023-05-09 11:09:19,743:INFO:Copying training dataset
2023-05-09 11:09:19,746:INFO:Defining folds
2023-05-09 11:09:19,746:INFO:Declaring metric variables
2023-05-09 11:09:19,746:INFO:Importing untrained model
2023-05-09 11:09:19,746:INFO:Ridge Regression Imported successfully
2023-05-09 11:09:19,747:INFO:Starting cross validation
2023-05-09 11:09:19,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:20,220:INFO:Calculating mean and std
2023-05-09 11:09:20,221:INFO:Creating metrics dataframe
2023-05-09 11:09:20,231:INFO:Uploading results into container
2023-05-09 11:09:20,231:INFO:Uploading model into container now
2023-05-09 11:09:20,232:INFO:_master_model_container: 7
2023-05-09 11:09:20,232:INFO:_display_container: 2
2023-05-09 11:09:20,232:INFO:Ridge(random_state=4509)
2023-05-09 11:09:20,232:INFO:create_model() successfully completed......................................
2023-05-09 11:09:20,297:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:20,297:INFO:Creating metrics dataframe
2023-05-09 11:09:20,300:INFO:Initializing K Neighbors Regressor
2023-05-09 11:09:20,300:INFO:Total runtime is 0.18229940334955852 minutes
2023-05-09 11:09:20,301:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:20,301:INFO:Initializing create_model()
2023-05-09 11:09:20,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:20,301:INFO:Checking exceptions
2023-05-09 11:09:20,301:INFO:Importing libraries
2023-05-09 11:09:20,301:INFO:Copying training dataset
2023-05-09 11:09:20,303:INFO:Defining folds
2023-05-09 11:09:20,303:INFO:Declaring metric variables
2023-05-09 11:09:20,303:INFO:Importing untrained model
2023-05-09 11:09:20,304:INFO:K Neighbors Regressor Imported successfully
2023-05-09 11:09:20,304:INFO:Starting cross validation
2023-05-09 11:09:20,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:20,762:INFO:Calculating mean and std
2023-05-09 11:09:20,763:INFO:Creating metrics dataframe
2023-05-09 11:09:20,772:INFO:Uploading results into container
2023-05-09 11:09:20,773:INFO:Uploading model into container now
2023-05-09 11:09:20,773:INFO:_master_model_container: 8
2023-05-09 11:09:20,773:INFO:_display_container: 2
2023-05-09 11:09:20,773:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 11:09:20,773:INFO:create_model() successfully completed......................................
2023-05-09 11:09:20,838:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:20,838:INFO:Creating metrics dataframe
2023-05-09 11:09:20,842:INFO:Initializing Decision Tree Regressor
2023-05-09 11:09:20,842:INFO:Total runtime is 0.19133353630701702 minutes
2023-05-09 11:09:20,842:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:20,842:INFO:Initializing create_model()
2023-05-09 11:09:20,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:20,843:INFO:Checking exceptions
2023-05-09 11:09:20,843:INFO:Importing libraries
2023-05-09 11:09:20,843:INFO:Copying training dataset
2023-05-09 11:09:20,845:INFO:Defining folds
2023-05-09 11:09:20,845:INFO:Declaring metric variables
2023-05-09 11:09:20,845:INFO:Importing untrained model
2023-05-09 11:09:20,846:INFO:Decision Tree Regressor Imported successfully
2023-05-09 11:09:20,846:INFO:Starting cross validation
2023-05-09 11:09:20,846:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:21,291:INFO:Calculating mean and std
2023-05-09 11:09:21,291:INFO:Creating metrics dataframe
2023-05-09 11:09:21,304:INFO:Uploading results into container
2023-05-09 11:09:21,305:INFO:Uploading model into container now
2023-05-09 11:09:21,305:INFO:_master_model_container: 9
2023-05-09 11:09:21,305:INFO:_display_container: 2
2023-05-09 11:09:21,305:INFO:DecisionTreeRegressor(random_state=4509)
2023-05-09 11:09:21,305:INFO:create_model() successfully completed......................................
2023-05-09 11:09:21,369:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:21,370:INFO:Creating metrics dataframe
2023-05-09 11:09:21,373:INFO:Initializing Dummy Regressor
2023-05-09 11:09:21,373:INFO:Total runtime is 0.20018698771794638 minutes
2023-05-09 11:09:21,374:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:21,374:INFO:Initializing create_model()
2023-05-09 11:09:21,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:21,374:INFO:Checking exceptions
2023-05-09 11:09:21,374:INFO:Importing libraries
2023-05-09 11:09:21,374:INFO:Copying training dataset
2023-05-09 11:09:21,376:INFO:Defining folds
2023-05-09 11:09:21,376:INFO:Declaring metric variables
2023-05-09 11:09:21,376:INFO:Importing untrained model
2023-05-09 11:09:21,376:INFO:Dummy Regressor Imported successfully
2023-05-09 11:09:21,377:INFO:Starting cross validation
2023-05-09 11:09:21,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:21,787:INFO:Calculating mean and std
2023-05-09 11:09:21,787:INFO:Creating metrics dataframe
2023-05-09 11:09:21,797:INFO:Uploading results into container
2023-05-09 11:09:21,798:INFO:Uploading model into container now
2023-05-09 11:09:21,798:INFO:_master_model_container: 10
2023-05-09 11:09:21,798:INFO:_display_container: 2
2023-05-09 11:09:21,798:INFO:DummyRegressor()
2023-05-09 11:09:21,798:INFO:create_model() successfully completed......................................
2023-05-09 11:09:21,863:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:21,863:INFO:Creating metrics dataframe
2023-05-09 11:09:21,866:INFO:Initializing Least Angle Regression
2023-05-09 11:09:21,866:INFO:Total runtime is 0.20840915044148764 minutes
2023-05-09 11:09:21,867:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:21,867:INFO:Initializing create_model()
2023-05-09 11:09:21,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:21,867:INFO:Checking exceptions
2023-05-09 11:09:21,867:INFO:Importing libraries
2023-05-09 11:09:21,867:INFO:Copying training dataset
2023-05-09 11:09:21,869:INFO:Defining folds
2023-05-09 11:09:21,869:INFO:Declaring metric variables
2023-05-09 11:09:21,869:INFO:Importing untrained model
2023-05-09 11:09:21,870:INFO:Least Angle Regression Imported successfully
2023-05-09 11:09:21,870:INFO:Starting cross validation
2023-05-09 11:09:21,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:22,332:INFO:Calculating mean and std
2023-05-09 11:09:22,332:INFO:Creating metrics dataframe
2023-05-09 11:09:22,342:INFO:Uploading results into container
2023-05-09 11:09:22,343:INFO:Uploading model into container now
2023-05-09 11:09:22,343:INFO:_master_model_container: 11
2023-05-09 11:09:22,343:INFO:_display_container: 2
2023-05-09 11:09:22,343:INFO:Lars(random_state=4509)
2023-05-09 11:09:22,344:INFO:create_model() successfully completed......................................
2023-05-09 11:09:22,408:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:22,409:INFO:Creating metrics dataframe
2023-05-09 11:09:22,412:INFO:Initializing Bayesian Ridge
2023-05-09 11:09:22,412:INFO:Total runtime is 0.21750765244166057 minutes
2023-05-09 11:09:22,412:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:22,412:INFO:Initializing create_model()
2023-05-09 11:09:22,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:22,413:INFO:Checking exceptions
2023-05-09 11:09:22,413:INFO:Importing libraries
2023-05-09 11:09:22,413:INFO:Copying training dataset
2023-05-09 11:09:22,415:INFO:Defining folds
2023-05-09 11:09:22,415:INFO:Declaring metric variables
2023-05-09 11:09:22,415:INFO:Importing untrained model
2023-05-09 11:09:22,415:INFO:Bayesian Ridge Imported successfully
2023-05-09 11:09:22,415:INFO:Starting cross validation
2023-05-09 11:09:22,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:22,863:INFO:Calculating mean and std
2023-05-09 11:09:22,864:INFO:Creating metrics dataframe
2023-05-09 11:09:22,874:INFO:Uploading results into container
2023-05-09 11:09:22,874:INFO:Uploading model into container now
2023-05-09 11:09:22,875:INFO:_master_model_container: 12
2023-05-09 11:09:22,875:INFO:_display_container: 2
2023-05-09 11:09:22,875:INFO:BayesianRidge()
2023-05-09 11:09:22,875:INFO:create_model() successfully completed......................................
2023-05-09 11:09:22,939:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:22,939:INFO:Creating metrics dataframe
2023-05-09 11:09:22,943:INFO:Initializing Huber Regressor
2023-05-09 11:09:22,943:INFO:Total runtime is 0.2263568878173828 minutes
2023-05-09 11:09:22,943:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:22,943:INFO:Initializing create_model()
2023-05-09 11:09:22,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:22,944:INFO:Checking exceptions
2023-05-09 11:09:22,944:INFO:Importing libraries
2023-05-09 11:09:22,944:INFO:Copying training dataset
2023-05-09 11:09:22,946:INFO:Defining folds
2023-05-09 11:09:22,946:INFO:Declaring metric variables
2023-05-09 11:09:22,946:INFO:Importing untrained model
2023-05-09 11:09:22,946:INFO:Huber Regressor Imported successfully
2023-05-09 11:09:22,946:INFO:Starting cross validation
2023-05-09 11:09:22,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:22,991:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,042:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,099:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,156:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,212:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,269:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,326:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,383:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,441:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,501:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:23,528:INFO:Calculating mean and std
2023-05-09 11:09:23,529:INFO:Creating metrics dataframe
2023-05-09 11:09:23,539:INFO:Uploading results into container
2023-05-09 11:09:23,540:INFO:Uploading model into container now
2023-05-09 11:09:23,540:INFO:_master_model_container: 13
2023-05-09 11:09:23,540:INFO:_display_container: 2
2023-05-09 11:09:23,540:INFO:HuberRegressor()
2023-05-09 11:09:23,540:INFO:create_model() successfully completed......................................
2023-05-09 11:09:23,609:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:23,609:INFO:Creating metrics dataframe
2023-05-09 11:09:23,613:INFO:Initializing Orthogonal Matching Pursuit
2023-05-09 11:09:23,614:INFO:Total runtime is 0.2375328818957011 minutes
2023-05-09 11:09:23,614:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:23,614:INFO:Initializing create_model()
2023-05-09 11:09:23,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:23,614:INFO:Checking exceptions
2023-05-09 11:09:23,614:INFO:Importing libraries
2023-05-09 11:09:23,614:INFO:Copying training dataset
2023-05-09 11:09:23,616:INFO:Defining folds
2023-05-09 11:09:23,616:INFO:Declaring metric variables
2023-05-09 11:09:23,616:INFO:Importing untrained model
2023-05-09 11:09:23,617:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 11:09:23,617:INFO:Starting cross validation
2023-05-09 11:09:23,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:24,046:INFO:Calculating mean and std
2023-05-09 11:09:24,046:INFO:Creating metrics dataframe
2023-05-09 11:09:24,056:INFO:Uploading results into container
2023-05-09 11:09:24,057:INFO:Uploading model into container now
2023-05-09 11:09:24,057:INFO:_master_model_container: 14
2023-05-09 11:09:24,057:INFO:_display_container: 2
2023-05-09 11:09:24,057:INFO:OrthogonalMatchingPursuit()
2023-05-09 11:09:24,058:INFO:create_model() successfully completed......................................
2023-05-09 11:09:24,122:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:24,122:INFO:Creating metrics dataframe
2023-05-09 11:09:24,126:INFO:Initializing Lasso Regression
2023-05-09 11:09:24,126:INFO:Total runtime is 0.24607328176498414 minutes
2023-05-09 11:09:24,126:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:24,127:INFO:Initializing create_model()
2023-05-09 11:09:24,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:24,127:INFO:Checking exceptions
2023-05-09 11:09:24,127:INFO:Importing libraries
2023-05-09 11:09:24,127:INFO:Copying training dataset
2023-05-09 11:09:24,129:INFO:Defining folds
2023-05-09 11:09:24,129:INFO:Declaring metric variables
2023-05-09 11:09:24,129:INFO:Importing untrained model
2023-05-09 11:09:24,130:INFO:Lasso Regression Imported successfully
2023-05-09 11:09:24,130:INFO:Starting cross validation
2023-05-09 11:09:24,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:24,564:INFO:Calculating mean and std
2023-05-09 11:09:24,565:INFO:Creating metrics dataframe
2023-05-09 11:09:24,577:INFO:Uploading results into container
2023-05-09 11:09:24,578:INFO:Uploading model into container now
2023-05-09 11:09:24,578:INFO:_master_model_container: 15
2023-05-09 11:09:24,578:INFO:_display_container: 2
2023-05-09 11:09:24,578:INFO:Lasso(random_state=4509)
2023-05-09 11:09:24,578:INFO:create_model() successfully completed......................................
2023-05-09 11:09:24,643:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:24,643:INFO:Creating metrics dataframe
2023-05-09 11:09:24,647:INFO:Initializing Elastic Net
2023-05-09 11:09:24,647:INFO:Total runtime is 0.2547598958015442 minutes
2023-05-09 11:09:24,647:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:24,647:INFO:Initializing create_model()
2023-05-09 11:09:24,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:24,647:INFO:Checking exceptions
2023-05-09 11:09:24,647:INFO:Importing libraries
2023-05-09 11:09:24,647:INFO:Copying training dataset
2023-05-09 11:09:24,650:INFO:Defining folds
2023-05-09 11:09:24,650:INFO:Declaring metric variables
2023-05-09 11:09:24,650:INFO:Importing untrained model
2023-05-09 11:09:24,650:INFO:Elastic Net Imported successfully
2023-05-09 11:09:24,650:INFO:Starting cross validation
2023-05-09 11:09:24,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:25,078:INFO:Calculating mean and std
2023-05-09 11:09:25,079:INFO:Creating metrics dataframe
2023-05-09 11:09:25,088:INFO:Uploading results into container
2023-05-09 11:09:25,089:INFO:Uploading model into container now
2023-05-09 11:09:25,089:INFO:_master_model_container: 16
2023-05-09 11:09:25,089:INFO:_display_container: 2
2023-05-09 11:09:25,090:INFO:ElasticNet(random_state=4509)
2023-05-09 11:09:25,090:INFO:create_model() successfully completed......................................
2023-05-09 11:09:25,156:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:25,156:INFO:Creating metrics dataframe
2023-05-09 11:09:25,160:INFO:Initializing Lasso Least Angle Regression
2023-05-09 11:09:25,160:INFO:Total runtime is 0.2633082350095113 minutes
2023-05-09 11:09:25,160:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:25,160:INFO:Initializing create_model()
2023-05-09 11:09:25,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:25,160:INFO:Checking exceptions
2023-05-09 11:09:25,160:INFO:Importing libraries
2023-05-09 11:09:25,160:INFO:Copying training dataset
2023-05-09 11:09:25,163:INFO:Defining folds
2023-05-09 11:09:25,163:INFO:Declaring metric variables
2023-05-09 11:09:25,163:INFO:Importing untrained model
2023-05-09 11:09:25,163:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 11:09:25,163:INFO:Starting cross validation
2023-05-09 11:09:25,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:25,618:INFO:Calculating mean and std
2023-05-09 11:09:25,618:INFO:Creating metrics dataframe
2023-05-09 11:09:25,628:INFO:Uploading results into container
2023-05-09 11:09:25,629:INFO:Uploading model into container now
2023-05-09 11:09:25,629:INFO:_master_model_container: 17
2023-05-09 11:09:25,630:INFO:_display_container: 2
2023-05-09 11:09:25,630:INFO:LassoLars(random_state=4509)
2023-05-09 11:09:25,630:INFO:create_model() successfully completed......................................
2023-05-09 11:09:25,695:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:25,695:INFO:Creating metrics dataframe
2023-05-09 11:09:25,698:INFO:Initializing Passive Aggressive Regressor
2023-05-09 11:09:25,698:INFO:Total runtime is 0.2722716331481933 minutes
2023-05-09 11:09:25,698:INFO:SubProcess create_model() called ==================================
2023-05-09 11:09:25,699:INFO:Initializing create_model()
2023-05-09 11:09:25,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E094B04F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:25,699:INFO:Checking exceptions
2023-05-09 11:09:25,699:INFO:Importing libraries
2023-05-09 11:09:25,699:INFO:Copying training dataset
2023-05-09 11:09:25,701:INFO:Defining folds
2023-05-09 11:09:25,701:INFO:Declaring metric variables
2023-05-09 11:09:25,701:INFO:Importing untrained model
2023-05-09 11:09:25,701:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 11:09:25,702:INFO:Starting cross validation
2023-05-09 11:09:25,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:09:26,144:INFO:Calculating mean and std
2023-05-09 11:09:26,144:INFO:Creating metrics dataframe
2023-05-09 11:09:26,154:INFO:Uploading results into container
2023-05-09 11:09:26,154:INFO:Uploading model into container now
2023-05-09 11:09:26,155:INFO:_master_model_container: 18
2023-05-09 11:09:26,155:INFO:_display_container: 2
2023-05-09 11:09:26,155:INFO:PassiveAggressiveRegressor(random_state=4509)
2023-05-09 11:09:26,155:INFO:create_model() successfully completed......................................
2023-05-09 11:09:26,220:INFO:SubProcess create_model() end ==================================
2023-05-09 11:09:26,220:INFO:Creating metrics dataframe
2023-05-09 11:09:26,225:INFO:Initializing create_model()
2023-05-09 11:09:26,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:26,225:INFO:Checking exceptions
2023-05-09 11:09:26,225:INFO:Importing libraries
2023-05-09 11:09:26,226:INFO:Copying training dataset
2023-05-09 11:09:26,228:INFO:Defining folds
2023-05-09 11:09:26,228:INFO:Declaring metric variables
2023-05-09 11:09:26,228:INFO:Importing untrained model
2023-05-09 11:09:26,228:INFO:Declaring custom model
2023-05-09 11:09:26,228:INFO:Extra Trees Regressor Imported successfully
2023-05-09 11:09:26,229:INFO:Cross validation set to False
2023-05-09 11:09:26,229:INFO:Fitting Model
2023-05-09 11:09:26,437:INFO:ExtraTreesRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:26,437:INFO:create_model() successfully completed......................................
2023-05-09 11:09:26,516:INFO:Initializing create_model()
2023-05-09 11:09:26,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=GradientBoostingRegressor(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:26,516:INFO:Checking exceptions
2023-05-09 11:09:26,517:INFO:Importing libraries
2023-05-09 11:09:26,517:INFO:Copying training dataset
2023-05-09 11:09:26,519:INFO:Defining folds
2023-05-09 11:09:26,520:INFO:Declaring metric variables
2023-05-09 11:09:26,520:INFO:Importing untrained model
2023-05-09 11:09:26,520:INFO:Declaring custom model
2023-05-09 11:09:26,520:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 11:09:26,521:INFO:Cross validation set to False
2023-05-09 11:09:26,521:INFO:Fitting Model
2023-05-09 11:09:26,650:INFO:GradientBoostingRegressor(random_state=4509)
2023-05-09 11:09:26,650:INFO:create_model() successfully completed......................................
2023-05-09 11:09:26,715:INFO:Initializing create_model()
2023-05-09 11:09:26,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=RandomForestRegressor(n_jobs=1, random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:26,715:INFO:Checking exceptions
2023-05-09 11:09:26,716:INFO:Importing libraries
2023-05-09 11:09:26,716:INFO:Copying training dataset
2023-05-09 11:09:26,719:INFO:Defining folds
2023-05-09 11:09:26,719:INFO:Declaring metric variables
2023-05-09 11:09:26,719:INFO:Importing untrained model
2023-05-09 11:09:26,719:INFO:Declaring custom model
2023-05-09 11:09:26,719:INFO:Random Forest Regressor Imported successfully
2023-05-09 11:09:26,720:INFO:Cross validation set to False
2023-05-09 11:09:26,720:INFO:Fitting Model
2023-05-09 11:09:27,050:INFO:RandomForestRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:27,050:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,115:INFO:Initializing create_model()
2023-05-09 11:09:27,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=AdaBoostRegressor(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,115:INFO:Checking exceptions
2023-05-09 11:09:27,116:INFO:Importing libraries
2023-05-09 11:09:27,116:INFO:Copying training dataset
2023-05-09 11:09:27,118:INFO:Defining folds
2023-05-09 11:09:27,118:INFO:Declaring metric variables
2023-05-09 11:09:27,118:INFO:Importing untrained model
2023-05-09 11:09:27,118:INFO:Declaring custom model
2023-05-09 11:09:27,119:INFO:str Imported successfully
2023-05-09 11:09:27,119:INFO:Cross validation set to False
2023-05-09 11:09:27,119:INFO:Fitting Model
2023-05-09 11:09:27,210:INFO:AdaBoostRegressor(random_state=4509)
2023-05-09 11:09:27,210:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,274:INFO:Initializing create_model()
2023-05-09 11:09:27,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LGBMRegressor(n_jobs=1, random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,274:INFO:Checking exceptions
2023-05-09 11:09:27,275:INFO:Importing libraries
2023-05-09 11:09:27,275:INFO:Copying training dataset
2023-05-09 11:09:27,277:INFO:Defining folds
2023-05-09 11:09:27,277:INFO:Declaring metric variables
2023-05-09 11:09:27,277:INFO:Importing untrained model
2023-05-09 11:09:27,277:INFO:Declaring custom model
2023-05-09 11:09:27,278:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 11:09:27,278:INFO:Cross validation set to False
2023-05-09 11:09:27,278:INFO:Fitting Model
2023-05-09 11:09:27,328:INFO:LGBMRegressor(n_jobs=1, random_state=4509)
2023-05-09 11:09:27,328:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,392:INFO:Initializing create_model()
2023-05-09 11:09:27,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=DecisionTreeRegressor(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,392:INFO:Checking exceptions
2023-05-09 11:09:27,393:INFO:Importing libraries
2023-05-09 11:09:27,393:INFO:Copying training dataset
2023-05-09 11:09:27,397:INFO:Defining folds
2023-05-09 11:09:27,397:INFO:Declaring metric variables
2023-05-09 11:09:27,398:INFO:Importing untrained model
2023-05-09 11:09:27,398:INFO:Declaring custom model
2023-05-09 11:09:27,398:INFO:Decision Tree Regressor Imported successfully
2023-05-09 11:09:27,398:INFO:Cross validation set to False
2023-05-09 11:09:27,399:INFO:Fitting Model
2023-05-09 11:09:27,432:INFO:DecisionTreeRegressor(random_state=4509)
2023-05-09 11:09:27,432:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,499:INFO:Initializing create_model()
2023-05-09 11:09:27,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LinearRegression(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,499:INFO:Checking exceptions
2023-05-09 11:09:27,499:INFO:Importing libraries
2023-05-09 11:09:27,500:INFO:Copying training dataset
2023-05-09 11:09:27,502:INFO:Defining folds
2023-05-09 11:09:27,502:INFO:Declaring metric variables
2023-05-09 11:09:27,502:INFO:Importing untrained model
2023-05-09 11:09:27,502:INFO:Declaring custom model
2023-05-09 11:09:27,502:INFO:Linear Regression Imported successfully
2023-05-09 11:09:27,503:INFO:Cross validation set to False
2023-05-09 11:09:27,503:INFO:Fitting Model
2023-05-09 11:09:27,536:INFO:LinearRegression(n_jobs=1)
2023-05-09 11:09:27,536:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,605:INFO:Initializing create_model()
2023-05-09 11:09:27,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Lars(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,605:INFO:Checking exceptions
2023-05-09 11:09:27,605:INFO:Importing libraries
2023-05-09 11:09:27,605:INFO:Copying training dataset
2023-05-09 11:09:27,608:INFO:Defining folds
2023-05-09 11:09:27,608:INFO:Declaring metric variables
2023-05-09 11:09:27,608:INFO:Importing untrained model
2023-05-09 11:09:27,608:INFO:Declaring custom model
2023-05-09 11:09:27,609:INFO:Least Angle Regression Imported successfully
2023-05-09 11:09:27,609:INFO:Cross validation set to False
2023-05-09 11:09:27,609:INFO:Fitting Model
2023-05-09 11:09:27,643:INFO:Lars(random_state=4509)
2023-05-09 11:09:27,643:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,707:INFO:Initializing create_model()
2023-05-09 11:09:27,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Ridge(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,707:INFO:Checking exceptions
2023-05-09 11:09:27,708:INFO:Importing libraries
2023-05-09 11:09:27,708:INFO:Copying training dataset
2023-05-09 11:09:27,710:INFO:Defining folds
2023-05-09 11:09:27,710:INFO:Declaring metric variables
2023-05-09 11:09:27,710:INFO:Importing untrained model
2023-05-09 11:09:27,710:INFO:Declaring custom model
2023-05-09 11:09:27,711:INFO:Ridge Regression Imported successfully
2023-05-09 11:09:27,711:INFO:Cross validation set to False
2023-05-09 11:09:27,711:INFO:Fitting Model
2023-05-09 11:09:27,746:INFO:Ridge(random_state=4509)
2023-05-09 11:09:27,746:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,811:INFO:Initializing create_model()
2023-05-09 11:09:27,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,811:INFO:Checking exceptions
2023-05-09 11:09:27,811:INFO:Importing libraries
2023-05-09 11:09:27,812:INFO:Copying training dataset
2023-05-09 11:09:27,814:INFO:Defining folds
2023-05-09 11:09:27,814:INFO:Declaring metric variables
2023-05-09 11:09:27,814:INFO:Importing untrained model
2023-05-09 11:09:27,814:INFO:Declaring custom model
2023-05-09 11:09:27,814:INFO:Bayesian Ridge Imported successfully
2023-05-09 11:09:27,815:INFO:Cross validation set to False
2023-05-09 11:09:27,815:INFO:Fitting Model
2023-05-09 11:09:27,852:INFO:BayesianRidge()
2023-05-09 11:09:27,852:INFO:create_model() successfully completed......................................
2023-05-09 11:09:27,916:INFO:Initializing create_model()
2023-05-09 11:09:27,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ElasticNet(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:27,916:INFO:Checking exceptions
2023-05-09 11:09:27,917:INFO:Importing libraries
2023-05-09 11:09:27,917:INFO:Copying training dataset
2023-05-09 11:09:27,919:INFO:Defining folds
2023-05-09 11:09:27,919:INFO:Declaring metric variables
2023-05-09 11:09:27,920:INFO:Importing untrained model
2023-05-09 11:09:27,920:INFO:Declaring custom model
2023-05-09 11:09:27,920:INFO:Elastic Net Imported successfully
2023-05-09 11:09:27,920:INFO:Cross validation set to False
2023-05-09 11:09:27,920:INFO:Fitting Model
2023-05-09 11:09:27,955:INFO:ElasticNet(random_state=4509)
2023-05-09 11:09:27,955:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,020:INFO:Initializing create_model()
2023-05-09 11:09:28,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Lasso(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,020:INFO:Checking exceptions
2023-05-09 11:09:28,021:INFO:Importing libraries
2023-05-09 11:09:28,021:INFO:Copying training dataset
2023-05-09 11:09:28,024:INFO:Defining folds
2023-05-09 11:09:28,024:INFO:Declaring metric variables
2023-05-09 11:09:28,024:INFO:Importing untrained model
2023-05-09 11:09:28,024:INFO:Declaring custom model
2023-05-09 11:09:28,024:INFO:Lasso Regression Imported successfully
2023-05-09 11:09:28,025:INFO:Cross validation set to False
2023-05-09 11:09:28,025:INFO:Fitting Model
2023-05-09 11:09:28,056:INFO:Lasso(random_state=4509)
2023-05-09 11:09:28,056:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,121:INFO:Initializing create_model()
2023-05-09 11:09:28,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LassoLars(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,121:INFO:Checking exceptions
2023-05-09 11:09:28,122:INFO:Importing libraries
2023-05-09 11:09:28,122:INFO:Copying training dataset
2023-05-09 11:09:28,124:INFO:Defining folds
2023-05-09 11:09:28,124:INFO:Declaring metric variables
2023-05-09 11:09:28,124:INFO:Importing untrained model
2023-05-09 11:09:28,124:INFO:Declaring custom model
2023-05-09 11:09:28,125:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 11:09:28,125:INFO:Cross validation set to False
2023-05-09 11:09:28,125:INFO:Fitting Model
2023-05-09 11:09:28,158:INFO:LassoLars(random_state=4509)
2023-05-09 11:09:28,158:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,222:INFO:Initializing create_model()
2023-05-09 11:09:28,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,223:INFO:Checking exceptions
2023-05-09 11:09:28,223:INFO:Importing libraries
2023-05-09 11:09:28,223:INFO:Copying training dataset
2023-05-09 11:09:28,226:INFO:Defining folds
2023-05-09 11:09:28,226:INFO:Declaring metric variables
2023-05-09 11:09:28,226:INFO:Importing untrained model
2023-05-09 11:09:28,226:INFO:Declaring custom model
2023-05-09 11:09:28,226:INFO:Huber Regressor Imported successfully
2023-05-09 11:09:28,227:INFO:Cross validation set to False
2023-05-09 11:09:28,227:INFO:Fitting Model
2023-05-09 11:09:28,266:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:09:28,274:INFO:HuberRegressor()
2023-05-09 11:09:28,274:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,338:INFO:Initializing create_model()
2023-05-09 11:09:28,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=KNeighborsRegressor(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,338:INFO:Checking exceptions
2023-05-09 11:09:28,339:INFO:Importing libraries
2023-05-09 11:09:28,339:INFO:Copying training dataset
2023-05-09 11:09:28,341:INFO:Defining folds
2023-05-09 11:09:28,341:INFO:Declaring metric variables
2023-05-09 11:09:28,341:INFO:Importing untrained model
2023-05-09 11:09:28,341:INFO:Declaring custom model
2023-05-09 11:09:28,342:INFO:K Neighbors Regressor Imported successfully
2023-05-09 11:09:28,342:INFO:Cross validation set to False
2023-05-09 11:09:28,342:INFO:Fitting Model
2023-05-09 11:09:28,374:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 11:09:28,374:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,440:INFO:Initializing create_model()
2023-05-09 11:09:28,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,440:INFO:Checking exceptions
2023-05-09 11:09:28,441:INFO:Importing libraries
2023-05-09 11:09:28,441:INFO:Copying training dataset
2023-05-09 11:09:28,443:INFO:Defining folds
2023-05-09 11:09:28,443:INFO:Declaring metric variables
2023-05-09 11:09:28,443:INFO:Importing untrained model
2023-05-09 11:09:28,443:INFO:Declaring custom model
2023-05-09 11:09:28,444:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 11:09:28,444:INFO:Cross validation set to False
2023-05-09 11:09:28,444:INFO:Fitting Model
2023-05-09 11:09:28,477:INFO:OrthogonalMatchingPursuit()
2023-05-09 11:09:28,477:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,546:INFO:Initializing create_model()
2023-05-09 11:09:28,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,546:INFO:Checking exceptions
2023-05-09 11:09:28,546:INFO:Importing libraries
2023-05-09 11:09:28,547:INFO:Copying training dataset
2023-05-09 11:09:28,549:INFO:Defining folds
2023-05-09 11:09:28,549:INFO:Declaring metric variables
2023-05-09 11:09:28,550:INFO:Importing untrained model
2023-05-09 11:09:28,550:INFO:Declaring custom model
2023-05-09 11:09:28,550:INFO:Dummy Regressor Imported successfully
2023-05-09 11:09:28,550:INFO:Cross validation set to False
2023-05-09 11:09:28,551:INFO:Fitting Model
2023-05-09 11:09:28,595:INFO:DummyRegressor()
2023-05-09 11:09:28,596:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,662:INFO:Initializing create_model()
2023-05-09 11:09:28,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=PassiveAggressiveRegressor(random_state=4509), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:09:28,662:INFO:Checking exceptions
2023-05-09 11:09:28,663:INFO:Importing libraries
2023-05-09 11:09:28,663:INFO:Copying training dataset
2023-05-09 11:09:28,665:INFO:Defining folds
2023-05-09 11:09:28,665:INFO:Declaring metric variables
2023-05-09 11:09:28,665:INFO:Importing untrained model
2023-05-09 11:09:28,665:INFO:Declaring custom model
2023-05-09 11:09:28,665:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 11:09:28,666:INFO:Cross validation set to False
2023-05-09 11:09:28,666:INFO:Fitting Model
2023-05-09 11:09:28,704:INFO:PassiveAggressiveRegressor(random_state=4509)
2023-05-09 11:09:28,704:INFO:create_model() successfully completed......................................
2023-05-09 11:09:28,772:INFO:_master_model_container: 18
2023-05-09 11:09:28,772:INFO:_display_container: 2
2023-05-09 11:09:28,774:INFO:[ExtraTreesRegressor(n_jobs=1, random_state=4509), GradientBoostingRegressor(random_state=4509), RandomForestRegressor(n_jobs=1, random_state=4509), AdaBoostRegressor(random_state=4509), LGBMRegressor(n_jobs=1, random_state=4509), DecisionTreeRegressor(random_state=4509), LinearRegression(n_jobs=1), Lars(random_state=4509), Ridge(random_state=4509), BayesianRidge(), ElasticNet(random_state=4509), Lasso(random_state=4509), LassoLars(random_state=4509), HuberRegressor(), KNeighborsRegressor(n_jobs=1), OrthogonalMatchingPursuit(), DummyRegressor(), PassiveAggressiveRegressor(random_state=4509)]
2023-05-09 11:09:28,774:INFO:compare_models() successfully completed......................................
2023-05-09 11:09:28,791:INFO:Initializing predict_model()
2023-05-09 11:09:28,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:28,791:INFO:Checking exceptions
2023-05-09 11:09:28,791:INFO:Preloading libraries
2023-05-09 11:09:28,791:INFO:Set up data.
2023-05-09 11:09:28,795:INFO:Set up index.
2023-05-09 11:09:28,891:INFO:Initializing predict_model()
2023-05-09 11:09:28,891:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=GradientBoostingRegressor(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:28,891:INFO:Checking exceptions
2023-05-09 11:09:28,891:INFO:Preloading libraries
2023-05-09 11:09:28,892:INFO:Set up data.
2023-05-09 11:09:28,896:INFO:Set up index.
2023-05-09 11:09:28,980:INFO:Initializing predict_model()
2023-05-09 11:09:28,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=RandomForestRegressor(n_jobs=1, random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:28,980:INFO:Checking exceptions
2023-05-09 11:09:28,980:INFO:Preloading libraries
2023-05-09 11:09:28,980:INFO:Set up data.
2023-05-09 11:09:28,989:INFO:Set up index.
2023-05-09 11:09:29,085:INFO:Initializing predict_model()
2023-05-09 11:09:29,085:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=AdaBoostRegressor(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,085:INFO:Checking exceptions
2023-05-09 11:09:29,085:INFO:Preloading libraries
2023-05-09 11:09:29,085:INFO:Set up data.
2023-05-09 11:09:29,089:INFO:Set up index.
2023-05-09 11:09:29,181:INFO:Initializing predict_model()
2023-05-09 11:09:29,181:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LGBMRegressor(n_jobs=1, random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,181:INFO:Checking exceptions
2023-05-09 11:09:29,181:INFO:Preloading libraries
2023-05-09 11:09:29,182:INFO:Set up data.
2023-05-09 11:09:29,186:INFO:Set up index.
2023-05-09 11:09:29,277:INFO:Initializing predict_model()
2023-05-09 11:09:29,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=DecisionTreeRegressor(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,277:INFO:Checking exceptions
2023-05-09 11:09:29,277:INFO:Preloading libraries
2023-05-09 11:09:29,278:INFO:Set up data.
2023-05-09 11:09:29,282:INFO:Set up index.
2023-05-09 11:09:29,393:INFO:Initializing predict_model()
2023-05-09 11:09:29,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LinearRegression(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,393:INFO:Checking exceptions
2023-05-09 11:09:29,393:INFO:Preloading libraries
2023-05-09 11:09:29,393:INFO:Set up data.
2023-05-09 11:09:29,397:INFO:Set up index.
2023-05-09 11:09:29,488:INFO:Initializing predict_model()
2023-05-09 11:09:29,490:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Lars(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,490:INFO:Checking exceptions
2023-05-09 11:09:29,490:INFO:Preloading libraries
2023-05-09 11:09:29,490:INFO:Set up data.
2023-05-09 11:09:29,493:INFO:Set up index.
2023-05-09 11:09:29,594:INFO:Initializing predict_model()
2023-05-09 11:09:29,594:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Ridge(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,594:INFO:Checking exceptions
2023-05-09 11:09:29,595:INFO:Preloading libraries
2023-05-09 11:09:29,595:INFO:Set up data.
2023-05-09 11:09:29,600:INFO:Set up index.
2023-05-09 11:09:29,707:INFO:Initializing predict_model()
2023-05-09 11:09:29,708:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,708:INFO:Checking exceptions
2023-05-09 11:09:29,708:INFO:Preloading libraries
2023-05-09 11:09:29,708:INFO:Set up data.
2023-05-09 11:09:29,711:INFO:Set up index.
2023-05-09 11:09:29,800:INFO:Initializing predict_model()
2023-05-09 11:09:29,800:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=ElasticNet(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,800:INFO:Checking exceptions
2023-05-09 11:09:29,800:INFO:Preloading libraries
2023-05-09 11:09:29,800:INFO:Set up data.
2023-05-09 11:09:29,805:INFO:Set up index.
2023-05-09 11:09:29,893:INFO:Initializing predict_model()
2023-05-09 11:09:29,893:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=Lasso(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,893:INFO:Checking exceptions
2023-05-09 11:09:29,893:INFO:Preloading libraries
2023-05-09 11:09:29,893:INFO:Set up data.
2023-05-09 11:09:29,897:INFO:Set up index.
2023-05-09 11:09:29,985:INFO:Initializing predict_model()
2023-05-09 11:09:29,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=LassoLars(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:29,985:INFO:Checking exceptions
2023-05-09 11:09:29,985:INFO:Preloading libraries
2023-05-09 11:09:29,985:INFO:Set up data.
2023-05-09 11:09:29,989:INFO:Set up index.
2023-05-09 11:09:30,077:INFO:Initializing predict_model()
2023-05-09 11:09:30,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:30,078:INFO:Checking exceptions
2023-05-09 11:09:30,078:INFO:Preloading libraries
2023-05-09 11:09:30,078:INFO:Set up data.
2023-05-09 11:09:30,082:INFO:Set up index.
2023-05-09 11:09:30,171:INFO:Initializing predict_model()
2023-05-09 11:09:30,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=KNeighborsRegressor(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:30,171:INFO:Checking exceptions
2023-05-09 11:09:30,171:INFO:Preloading libraries
2023-05-09 11:09:30,171:INFO:Set up data.
2023-05-09 11:09:30,175:INFO:Set up index.
2023-05-09 11:09:30,277:INFO:Initializing predict_model()
2023-05-09 11:09:30,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:30,277:INFO:Checking exceptions
2023-05-09 11:09:30,277:INFO:Preloading libraries
2023-05-09 11:09:30,278:INFO:Set up data.
2023-05-09 11:09:30,282:INFO:Set up index.
2023-05-09 11:09:30,371:INFO:Initializing predict_model()
2023-05-09 11:09:30,371:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:30,371:INFO:Checking exceptions
2023-05-09 11:09:30,371:INFO:Preloading libraries
2023-05-09 11:09:30,371:INFO:Set up data.
2023-05-09 11:09:30,375:INFO:Set up index.
2023-05-09 11:09:30,468:INFO:Initializing predict_model()
2023-05-09 11:09:30,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E093CFFA0>, estimator=PassiveAggressiveRegressor(random_state=4509), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E61AC3E50>)
2023-05-09 11:09:30,468:INFO:Checking exceptions
2023-05-09 11:09:30,468:INFO:Preloading libraries
2023-05-09 11:09:30,468:INFO:Set up data.
2023-05-09 11:09:30,472:INFO:Set up index.
2023-05-09 11:21:53,230:INFO:PyCaret RegressionExperiment
2023-05-09 11:21:53,230:INFO:Logging name: reg-default-name
2023-05-09 11:21:53,230:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-09 11:21:53,230:INFO:version 3.0.0
2023-05-09 11:21:53,231:INFO:Initializing setup()
2023-05-09 11:21:53,231:INFO:self.USI: f1e4
2023-05-09 11:21:53,231:INFO:self._variable_keys: {'logging_param', 'log_plots_param', 'data', 'idx', 'n_jobs_param', 'html_param', 'exp_name_log', '_available_plots', 'fold_generator', 'memory', 'gpu_param', 'USI', 'y_train', 'y', 'target_param', 'fold_groups_param', '_ml_usecase', 'pipeline', 'transform_target_param', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'X', 'fold_shuffle_param', 'y_test', 'seed', 'X_test'}
2023-05-09 11:21:53,231:INFO:Checking environment
2023-05-09 11:21:53,231:INFO:python_version: 3.8.10
2023-05-09 11:21:53,231:INFO:python_build: ('tags/v3.8.10:3d8993a', 'May  3 2021 11:48:03')
2023-05-09 11:21:53,231:INFO:machine: AMD64
2023-05-09 11:21:53,231:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-09 11:21:53,237:INFO:Memory: svmem(total=7896625152, available=1041633280, percent=86.8, used=6854991872, free=1041633280)
2023-05-09 11:21:53,237:INFO:Physical Core: 8
2023-05-09 11:21:53,237:INFO:Logical Core: 16
2023-05-09 11:21:53,237:INFO:Checking libraries
2023-05-09 11:21:53,237:INFO:System:
2023-05-09 11:21:53,237:INFO:    python: 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
2023-05-09 11:21:53,237:INFO:executable: C:/Users/14357/Documents/.virtualenvs/stressor-env2023-05-09104458/Scripts/python.exe
2023-05-09 11:21:53,237:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-09 11:21:53,237:INFO:PyCaret required dependencies:
2023-05-09 11:21:53,237:INFO:                 pip: 23.1.2
2023-05-09 11:21:53,238:INFO:          setuptools: 67.7.2
2023-05-09 11:21:53,238:INFO:             pycaret: 3.0.0
2023-05-09 11:21:53,238:INFO:             IPython: 8.12.2
2023-05-09 11:21:53,238:INFO:          ipywidgets: 8.0.6
2023-05-09 11:21:53,238:INFO:                tqdm: 4.65.0
2023-05-09 11:21:53,238:INFO:               numpy: 1.24.3
2023-05-09 11:21:53,238:INFO:              pandas: 1.5.3
2023-05-09 11:21:53,238:INFO:              jinja2: 3.1.2
2023-05-09 11:21:53,238:INFO:               scipy: 1.10.1
2023-05-09 11:21:53,238:INFO:              joblib: 1.2.0
2023-05-09 11:21:53,238:INFO:             sklearn: 1.2.2
2023-05-09 11:21:53,238:INFO:                pyod: 1.0.9
2023-05-09 11:21:53,238:INFO:            imblearn: 0.10.1
2023-05-09 11:21:53,238:INFO:   category_encoders: 2.6.0
2023-05-09 11:21:53,238:INFO:            lightgbm: 3.3.5
2023-05-09 11:21:53,238:INFO:               numba: 0.57.0
2023-05-09 11:21:53,238:INFO:            requests: 2.30.0
2023-05-09 11:21:53,238:INFO:          matplotlib: 3.7.1
2023-05-09 11:21:53,238:INFO:          scikitplot: 0.3.7
2023-05-09 11:21:53,238:INFO:         yellowbrick: 1.5
2023-05-09 11:21:53,238:INFO:              plotly: 5.14.1
2023-05-09 11:21:53,238:INFO:             kaleido: 0.2.1
2023-05-09 11:21:53,238:INFO:         statsmodels: 0.14.0
2023-05-09 11:21:53,238:INFO:              sktime: 0.18.0
2023-05-09 11:21:53,238:INFO:               tbats: 1.1.3
2023-05-09 11:21:53,238:INFO:            pmdarima: 2.0.3
2023-05-09 11:21:53,238:INFO:              psutil: 5.9.5
2023-05-09 11:21:53,238:INFO:PyCaret optional dependencies:
2023-05-09 11:21:53,238:INFO:                shap: Not installed
2023-05-09 11:21:53,238:INFO:           interpret: Not installed
2023-05-09 11:21:53,238:INFO:                umap: Not installed
2023-05-09 11:21:53,238:INFO:    pandas_profiling: Not installed
2023-05-09 11:21:53,238:INFO:  explainerdashboard: Not installed
2023-05-09 11:21:53,238:INFO:             autoviz: Not installed
2023-05-09 11:21:53,238:INFO:           fairlearn: Not installed
2023-05-09 11:21:53,239:INFO:             xgboost: Not installed
2023-05-09 11:21:53,239:INFO:            catboost: Not installed
2023-05-09 11:21:53,239:INFO:              kmodes: Not installed
2023-05-09 11:21:53,239:INFO:             mlxtend: Not installed
2023-05-09 11:21:53,239:INFO:       statsforecast: Not installed
2023-05-09 11:21:53,239:INFO:        tune_sklearn: Not installed
2023-05-09 11:21:53,239:INFO:                 ray: Not installed
2023-05-09 11:21:53,239:INFO:            hyperopt: Not installed
2023-05-09 11:21:53,239:INFO:              optuna: Not installed
2023-05-09 11:21:53,239:INFO:               skopt: Not installed
2023-05-09 11:21:53,239:INFO:              mlflow: Not installed
2023-05-09 11:21:53,239:INFO:              gradio: Not installed
2023-05-09 11:21:53,239:INFO:             fastapi: Not installed
2023-05-09 11:21:53,239:INFO:             uvicorn: Not installed
2023-05-09 11:21:53,239:INFO:              m2cgen: Not installed
2023-05-09 11:21:53,239:INFO:           evidently: Not installed
2023-05-09 11:21:53,239:INFO:               fugue: Not installed
2023-05-09 11:21:53,239:INFO:           streamlit: Not installed
2023-05-09 11:21:53,239:INFO:             prophet: Not installed
2023-05-09 11:21:53,239:INFO:None
2023-05-09 11:21:53,239:INFO:Set up data.
2023-05-09 11:21:53,244:INFO:Set up train/test split.
2023-05-09 11:21:53,246:INFO:Set up index.
2023-05-09 11:21:53,247:INFO:Set up folding strategy.
2023-05-09 11:21:53,247:INFO:Assigning column types.
2023-05-09 11:21:53,249:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-09 11:21:53,249:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,255:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,259:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,312:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,355:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,360:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,416:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,459:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,460:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-09 11:21:53,464:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,468:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,575:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,670:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,671:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-09 11:21:53,727:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,823:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,832:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:53,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:53,928:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-09 11:21:53,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,097:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,140:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-09 11:21:54,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,311:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 11:21:54,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,355:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-09 11:21:54,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,567:INFO:Preparing preprocessing pipeline...
2023-05-09 11:21:54,567:INFO:Set up simple imputation.
2023-05-09 11:21:54,585:INFO:Finished creating preprocessing pipeline.
2023-05-09 11:21:54,588:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\14357\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crim', 'zn', 'indus', 'nox', 'rm',
                                             'age', 'dis', 'rad', 'tax',
                                             'ptratio', 'b', 'lstat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-05-09 11:21:54,588:INFO:Creating final display dataframe.
2023-05-09 11:21:54,651:INFO:Setup _display_container:                     Description             Value
0                    Session id              3223
1                        Target             cmedv
2                   Target type        Regression
3           Original data shape         (456, 13)
4        Transformed data shape         (456, 13)
5   Transformed train set shape         (319, 13)
6    Transformed test set shape         (137, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                 1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f1e4
2023-05-09 11:21:54,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 11:21:54,869:INFO:setup() successfully completed in 1.65s...............
2023-05-09 11:21:54,870:INFO:Initializing compare_models()
2023-05-09 11:21:54,870:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, include=['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], fold=None, round=4, cross_validation=True, sort=RMSE, n_select=9999, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, 'include': ['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 9999, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-09 11:21:54,870:INFO:Checking exceptions
2023-05-09 11:21:54,872:INFO:Preparing display monitor
2023-05-09 11:21:54,873:INFO:Initializing AdaBoost Regressor
2023-05-09 11:21:54,873:INFO:Total runtime is 0.0 minutes
2023-05-09 11:21:54,873:INFO:SubProcess create_model() called ==================================
2023-05-09 11:21:54,874:INFO:Initializing create_model()
2023-05-09 11:21:54,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:21:54,874:INFO:Checking exceptions
2023-05-09 11:21:54,874:INFO:Importing libraries
2023-05-09 11:21:54,874:INFO:Copying training dataset
2023-05-09 11:21:54,877:INFO:Defining folds
2023-05-09 11:21:54,877:INFO:Declaring metric variables
2023-05-09 11:21:54,877:INFO:Importing untrained model
2023-05-09 11:21:54,877:INFO:AdaBoost Regressor Imported successfully
2023-05-09 11:21:54,877:INFO:Starting cross validation
2023-05-09 11:21:54,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:21:55,987:INFO:Calculating mean and std
2023-05-09 11:21:55,987:INFO:Creating metrics dataframe
2023-05-09 11:21:55,998:INFO:Uploading results into container
2023-05-09 11:21:55,999:INFO:Uploading model into container now
2023-05-09 11:21:55,999:INFO:_master_model_container: 1
2023-05-09 11:21:55,999:INFO:_display_container: 2
2023-05-09 11:21:55,999:INFO:AdaBoostRegressor(random_state=3223)
2023-05-09 11:21:55,999:INFO:create_model() successfully completed......................................
2023-05-09 11:21:56,067:INFO:SubProcess create_model() end ==================================
2023-05-09 11:21:56,067:INFO:Creating metrics dataframe
2023-05-09 11:21:56,070:INFO:Initializing Extra Trees Regressor
2023-05-09 11:21:56,070:INFO:Total runtime is 0.01994690497716268 minutes
2023-05-09 11:21:56,070:INFO:SubProcess create_model() called ==================================
2023-05-09 11:21:56,070:INFO:Initializing create_model()
2023-05-09 11:21:56,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:21:56,071:INFO:Checking exceptions
2023-05-09 11:21:56,071:INFO:Importing libraries
2023-05-09 11:21:56,071:INFO:Copying training dataset
2023-05-09 11:21:56,073:INFO:Defining folds
2023-05-09 11:21:56,073:INFO:Declaring metric variables
2023-05-09 11:21:56,073:INFO:Importing untrained model
2023-05-09 11:21:56,073:INFO:Extra Trees Regressor Imported successfully
2023-05-09 11:21:56,073:INFO:Starting cross validation
2023-05-09 11:21:56,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:21:58,614:INFO:Calculating mean and std
2023-05-09 11:21:58,614:INFO:Creating metrics dataframe
2023-05-09 11:21:58,627:INFO:Uploading results into container
2023-05-09 11:21:58,628:INFO:Uploading model into container now
2023-05-09 11:21:58,628:INFO:_master_model_container: 2
2023-05-09 11:21:58,628:INFO:_display_container: 2
2023-05-09 11:21:58,628:INFO:ExtraTreesRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:21:58,628:INFO:create_model() successfully completed......................................
2023-05-09 11:21:58,694:INFO:SubProcess create_model() end ==================================
2023-05-09 11:21:58,695:INFO:Creating metrics dataframe
2023-05-09 11:21:58,697:INFO:Initializing Light Gradient Boosting Machine
2023-05-09 11:21:58,697:INFO:Total runtime is 0.06373900969823201 minutes
2023-05-09 11:21:58,698:INFO:SubProcess create_model() called ==================================
2023-05-09 11:21:58,698:INFO:Initializing create_model()
2023-05-09 11:21:58,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:21:58,698:INFO:Checking exceptions
2023-05-09 11:21:58,698:INFO:Importing libraries
2023-05-09 11:21:58,698:INFO:Copying training dataset
2023-05-09 11:21:58,700:INFO:Defining folds
2023-05-09 11:21:58,700:INFO:Declaring metric variables
2023-05-09 11:21:58,700:INFO:Importing untrained model
2023-05-09 11:21:58,701:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 11:21:58,701:INFO:Starting cross validation
2023-05-09 11:21:58,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:21:59,362:INFO:Calculating mean and std
2023-05-09 11:21:59,362:INFO:Creating metrics dataframe
2023-05-09 11:21:59,380:INFO:Uploading results into container
2023-05-09 11:21:59,380:INFO:Uploading model into container now
2023-05-09 11:21:59,380:INFO:_master_model_container: 3
2023-05-09 11:21:59,381:INFO:_display_container: 2
2023-05-09 11:21:59,381:INFO:LGBMRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:21:59,381:INFO:create_model() successfully completed......................................
2023-05-09 11:21:59,448:INFO:SubProcess create_model() end ==================================
2023-05-09 11:21:59,448:INFO:Creating metrics dataframe
2023-05-09 11:21:59,452:INFO:Initializing Gradient Boosting Regressor
2023-05-09 11:21:59,452:INFO:Total runtime is 0.07631916602452596 minutes
2023-05-09 11:21:59,452:INFO:SubProcess create_model() called ==================================
2023-05-09 11:21:59,452:INFO:Initializing create_model()
2023-05-09 11:21:59,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:21:59,452:INFO:Checking exceptions
2023-05-09 11:21:59,452:INFO:Importing libraries
2023-05-09 11:21:59,452:INFO:Copying training dataset
2023-05-09 11:21:59,454:INFO:Defining folds
2023-05-09 11:21:59,454:INFO:Declaring metric variables
2023-05-09 11:21:59,455:INFO:Importing untrained model
2023-05-09 11:21:59,455:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 11:21:59,455:INFO:Starting cross validation
2023-05-09 11:21:59,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:01,049:INFO:Calculating mean and std
2023-05-09 11:22:01,049:INFO:Creating metrics dataframe
2023-05-09 11:22:01,062:INFO:Uploading results into container
2023-05-09 11:22:01,064:INFO:Uploading model into container now
2023-05-09 11:22:01,064:INFO:_master_model_container: 4
2023-05-09 11:22:01,064:INFO:_display_container: 2
2023-05-09 11:22:01,064:INFO:GradientBoostingRegressor(random_state=3223)
2023-05-09 11:22:01,064:INFO:create_model() successfully completed......................................
2023-05-09 11:22:01,129:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:01,129:INFO:Creating metrics dataframe
2023-05-09 11:22:01,133:INFO:Initializing Linear Regression
2023-05-09 11:22:01,133:INFO:Total runtime is 0.1043352484703064 minutes
2023-05-09 11:22:01,133:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:01,133:INFO:Initializing create_model()
2023-05-09 11:22:01,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:01,133:INFO:Checking exceptions
2023-05-09 11:22:01,133:INFO:Importing libraries
2023-05-09 11:22:01,133:INFO:Copying training dataset
2023-05-09 11:22:01,135:INFO:Defining folds
2023-05-09 11:22:01,136:INFO:Declaring metric variables
2023-05-09 11:22:01,136:INFO:Importing untrained model
2023-05-09 11:22:01,136:INFO:Linear Regression Imported successfully
2023-05-09 11:22:01,136:INFO:Starting cross validation
2023-05-09 11:22:01,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:01,604:INFO:Calculating mean and std
2023-05-09 11:22:01,605:INFO:Creating metrics dataframe
2023-05-09 11:22:01,619:INFO:Uploading results into container
2023-05-09 11:22:01,619:INFO:Uploading model into container now
2023-05-09 11:22:01,620:INFO:_master_model_container: 5
2023-05-09 11:22:01,620:INFO:_display_container: 2
2023-05-09 11:22:01,620:INFO:LinearRegression(n_jobs=1)
2023-05-09 11:22:01,620:INFO:create_model() successfully completed......................................
2023-05-09 11:22:01,686:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:01,686:INFO:Creating metrics dataframe
2023-05-09 11:22:01,689:INFO:Initializing Random Forest Regressor
2023-05-09 11:22:01,689:INFO:Total runtime is 0.1135941982269287 minutes
2023-05-09 11:22:01,689:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:01,689:INFO:Initializing create_model()
2023-05-09 11:22:01,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:01,690:INFO:Checking exceptions
2023-05-09 11:22:01,690:INFO:Importing libraries
2023-05-09 11:22:01,690:INFO:Copying training dataset
2023-05-09 11:22:01,692:INFO:Defining folds
2023-05-09 11:22:01,692:INFO:Declaring metric variables
2023-05-09 11:22:01,692:INFO:Importing untrained model
2023-05-09 11:22:01,692:INFO:Random Forest Regressor Imported successfully
2023-05-09 11:22:01,692:INFO:Starting cross validation
2023-05-09 11:22:01,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:05,356:INFO:Calculating mean and std
2023-05-09 11:22:05,357:INFO:Creating metrics dataframe
2023-05-09 11:22:05,373:INFO:Uploading results into container
2023-05-09 11:22:05,374:INFO:Uploading model into container now
2023-05-09 11:22:05,374:INFO:_master_model_container: 6
2023-05-09 11:22:05,374:INFO:_display_container: 2
2023-05-09 11:22:05,374:INFO:RandomForestRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:22:05,374:INFO:create_model() successfully completed......................................
2023-05-09 11:22:05,442:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:05,442:INFO:Creating metrics dataframe
2023-05-09 11:22:05,445:INFO:Initializing Ridge Regression
2023-05-09 11:22:05,446:INFO:Total runtime is 0.1762162725130717 minutes
2023-05-09 11:22:05,446:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:05,446:INFO:Initializing create_model()
2023-05-09 11:22:05,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:05,446:INFO:Checking exceptions
2023-05-09 11:22:05,446:INFO:Importing libraries
2023-05-09 11:22:05,446:INFO:Copying training dataset
2023-05-09 11:22:05,449:INFO:Defining folds
2023-05-09 11:22:05,449:INFO:Declaring metric variables
2023-05-09 11:22:05,449:INFO:Importing untrained model
2023-05-09 11:22:05,449:INFO:Ridge Regression Imported successfully
2023-05-09 11:22:05,449:INFO:Starting cross validation
2023-05-09 11:22:05,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:05,947:INFO:Calculating mean and std
2023-05-09 11:22:05,947:INFO:Creating metrics dataframe
2023-05-09 11:22:05,964:INFO:Uploading results into container
2023-05-09 11:22:05,965:INFO:Uploading model into container now
2023-05-09 11:22:05,965:INFO:_master_model_container: 7
2023-05-09 11:22:05,965:INFO:_display_container: 2
2023-05-09 11:22:05,965:INFO:Ridge(random_state=3223)
2023-05-09 11:22:05,965:INFO:create_model() successfully completed......................................
2023-05-09 11:22:06,031:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:06,031:INFO:Creating metrics dataframe
2023-05-09 11:22:06,035:INFO:Initializing K Neighbors Regressor
2023-05-09 11:22:06,035:INFO:Total runtime is 0.1860258460044861 minutes
2023-05-09 11:22:06,035:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:06,035:INFO:Initializing create_model()
2023-05-09 11:22:06,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:06,035:INFO:Checking exceptions
2023-05-09 11:22:06,035:INFO:Importing libraries
2023-05-09 11:22:06,035:INFO:Copying training dataset
2023-05-09 11:22:06,037:INFO:Defining folds
2023-05-09 11:22:06,038:INFO:Declaring metric variables
2023-05-09 11:22:06,038:INFO:Importing untrained model
2023-05-09 11:22:06,038:INFO:K Neighbors Regressor Imported successfully
2023-05-09 11:22:06,038:INFO:Starting cross validation
2023-05-09 11:22:06,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:06,541:INFO:Calculating mean and std
2023-05-09 11:22:06,541:INFO:Creating metrics dataframe
2023-05-09 11:22:06,558:INFO:Uploading results into container
2023-05-09 11:22:06,559:INFO:Uploading model into container now
2023-05-09 11:22:06,559:INFO:_master_model_container: 8
2023-05-09 11:22:06,559:INFO:_display_container: 2
2023-05-09 11:22:06,559:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 11:22:06,559:INFO:create_model() successfully completed......................................
2023-05-09 11:22:06,628:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:06,628:INFO:Creating metrics dataframe
2023-05-09 11:22:06,631:INFO:Initializing Decision Tree Regressor
2023-05-09 11:22:06,631:INFO:Total runtime is 0.195962925752004 minutes
2023-05-09 11:22:06,631:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:06,632:INFO:Initializing create_model()
2023-05-09 11:22:06,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:06,632:INFO:Checking exceptions
2023-05-09 11:22:06,632:INFO:Importing libraries
2023-05-09 11:22:06,632:INFO:Copying training dataset
2023-05-09 11:22:06,634:INFO:Defining folds
2023-05-09 11:22:06,634:INFO:Declaring metric variables
2023-05-09 11:22:06,634:INFO:Importing untrained model
2023-05-09 11:22:06,635:INFO:Decision Tree Regressor Imported successfully
2023-05-09 11:22:06,635:INFO:Starting cross validation
2023-05-09 11:22:06,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:07,142:INFO:Calculating mean and std
2023-05-09 11:22:07,142:INFO:Creating metrics dataframe
2023-05-09 11:22:07,159:INFO:Uploading results into container
2023-05-09 11:22:07,160:INFO:Uploading model into container now
2023-05-09 11:22:07,160:INFO:_master_model_container: 9
2023-05-09 11:22:07,160:INFO:_display_container: 2
2023-05-09 11:22:07,161:INFO:DecisionTreeRegressor(random_state=3223)
2023-05-09 11:22:07,161:INFO:create_model() successfully completed......................................
2023-05-09 11:22:07,226:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:07,226:INFO:Creating metrics dataframe
2023-05-09 11:22:07,229:INFO:Initializing Dummy Regressor
2023-05-09 11:22:07,229:INFO:Total runtime is 0.2059329907099406 minutes
2023-05-09 11:22:07,230:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:07,230:INFO:Initializing create_model()
2023-05-09 11:22:07,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:07,230:INFO:Checking exceptions
2023-05-09 11:22:07,230:INFO:Importing libraries
2023-05-09 11:22:07,230:INFO:Copying training dataset
2023-05-09 11:22:07,232:INFO:Defining folds
2023-05-09 11:22:07,232:INFO:Declaring metric variables
2023-05-09 11:22:07,233:INFO:Importing untrained model
2023-05-09 11:22:07,233:INFO:Dummy Regressor Imported successfully
2023-05-09 11:22:07,233:INFO:Starting cross validation
2023-05-09 11:22:07,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:07,710:INFO:Calculating mean and std
2023-05-09 11:22:07,711:INFO:Creating metrics dataframe
2023-05-09 11:22:07,727:INFO:Uploading results into container
2023-05-09 11:22:07,727:INFO:Uploading model into container now
2023-05-09 11:22:07,728:INFO:_master_model_container: 10
2023-05-09 11:22:07,728:INFO:_display_container: 2
2023-05-09 11:22:07,728:INFO:DummyRegressor()
2023-05-09 11:22:07,728:INFO:create_model() successfully completed......................................
2023-05-09 11:22:07,793:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:07,793:INFO:Creating metrics dataframe
2023-05-09 11:22:07,797:INFO:Initializing Least Angle Regression
2023-05-09 11:22:07,797:INFO:Total runtime is 0.21540355285008747 minutes
2023-05-09 11:22:07,797:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:07,797:INFO:Initializing create_model()
2023-05-09 11:22:07,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:07,797:INFO:Checking exceptions
2023-05-09 11:22:07,797:INFO:Importing libraries
2023-05-09 11:22:07,797:INFO:Copying training dataset
2023-05-09 11:22:07,800:INFO:Defining folds
2023-05-09 11:22:07,800:INFO:Declaring metric variables
2023-05-09 11:22:07,800:INFO:Importing untrained model
2023-05-09 11:22:07,800:INFO:Least Angle Regression Imported successfully
2023-05-09 11:22:07,800:INFO:Starting cross validation
2023-05-09 11:22:07,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:08,307:INFO:Calculating mean and std
2023-05-09 11:22:08,308:INFO:Creating metrics dataframe
2023-05-09 11:22:08,325:INFO:Uploading results into container
2023-05-09 11:22:08,325:INFO:Uploading model into container now
2023-05-09 11:22:08,326:INFO:_master_model_container: 11
2023-05-09 11:22:08,326:INFO:_display_container: 2
2023-05-09 11:22:08,326:INFO:Lars(random_state=3223)
2023-05-09 11:22:08,326:INFO:create_model() successfully completed......................................
2023-05-09 11:22:08,392:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:08,392:INFO:Creating metrics dataframe
2023-05-09 11:22:08,396:INFO:Initializing Bayesian Ridge
2023-05-09 11:22:08,396:INFO:Total runtime is 0.22538121541341144 minutes
2023-05-09 11:22:08,396:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:08,396:INFO:Initializing create_model()
2023-05-09 11:22:08,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:08,396:INFO:Checking exceptions
2023-05-09 11:22:08,396:INFO:Importing libraries
2023-05-09 11:22:08,396:INFO:Copying training dataset
2023-05-09 11:22:08,399:INFO:Defining folds
2023-05-09 11:22:08,399:INFO:Declaring metric variables
2023-05-09 11:22:08,399:INFO:Importing untrained model
2023-05-09 11:22:08,399:INFO:Bayesian Ridge Imported successfully
2023-05-09 11:22:08,399:INFO:Starting cross validation
2023-05-09 11:22:08,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:08,898:INFO:Calculating mean and std
2023-05-09 11:22:08,898:INFO:Creating metrics dataframe
2023-05-09 11:22:08,915:INFO:Uploading results into container
2023-05-09 11:22:08,915:INFO:Uploading model into container now
2023-05-09 11:22:08,915:INFO:_master_model_container: 12
2023-05-09 11:22:08,916:INFO:_display_container: 2
2023-05-09 11:22:08,916:INFO:BayesianRidge()
2023-05-09 11:22:08,916:INFO:create_model() successfully completed......................................
2023-05-09 11:22:08,997:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:08,997:INFO:Creating metrics dataframe
2023-05-09 11:22:08,997:INFO:Initializing Huber Regressor
2023-05-09 11:22:08,997:INFO:Total runtime is 0.23539154529571532 minutes
2023-05-09 11:22:08,997:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:08,997:INFO:Initializing create_model()
2023-05-09 11:22:08,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:08,997:INFO:Checking exceptions
2023-05-09 11:22:08,997:INFO:Importing libraries
2023-05-09 11:22:08,997:INFO:Copying training dataset
2023-05-09 11:22:09,005:INFO:Defining folds
2023-05-09 11:22:09,005:INFO:Declaring metric variables
2023-05-09 11:22:09,005:INFO:Importing untrained model
2023-05-09 11:22:09,006:INFO:Huber Regressor Imported successfully
2023-05-09 11:22:09,006:INFO:Starting cross validation
2023-05-09 11:22:09,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:09,046:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,096:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,162:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,225:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,289:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,352:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,416:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,482:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,548:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,612:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:09,653:INFO:Calculating mean and std
2023-05-09 11:22:09,653:INFO:Creating metrics dataframe
2023-05-09 11:22:09,670:INFO:Uploading results into container
2023-05-09 11:22:09,671:INFO:Uploading model into container now
2023-05-09 11:22:09,671:INFO:_master_model_container: 13
2023-05-09 11:22:09,671:INFO:_display_container: 2
2023-05-09 11:22:09,671:INFO:HuberRegressor()
2023-05-09 11:22:09,671:INFO:create_model() successfully completed......................................
2023-05-09 11:22:09,738:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:09,738:INFO:Creating metrics dataframe
2023-05-09 11:22:09,741:INFO:Initializing Orthogonal Matching Pursuit
2023-05-09 11:22:09,742:INFO:Total runtime is 0.24781186580657957 minutes
2023-05-09 11:22:09,742:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:09,742:INFO:Initializing create_model()
2023-05-09 11:22:09,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:09,742:INFO:Checking exceptions
2023-05-09 11:22:09,742:INFO:Importing libraries
2023-05-09 11:22:09,742:INFO:Copying training dataset
2023-05-09 11:22:09,744:INFO:Defining folds
2023-05-09 11:22:09,744:INFO:Declaring metric variables
2023-05-09 11:22:09,744:INFO:Importing untrained model
2023-05-09 11:22:09,745:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 11:22:09,745:INFO:Starting cross validation
2023-05-09 11:22:09,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:10,233:INFO:Calculating mean and std
2023-05-09 11:22:10,233:INFO:Creating metrics dataframe
2023-05-09 11:22:10,250:INFO:Uploading results into container
2023-05-09 11:22:10,250:INFO:Uploading model into container now
2023-05-09 11:22:10,252:INFO:_master_model_container: 14
2023-05-09 11:22:10,252:INFO:_display_container: 2
2023-05-09 11:22:10,252:INFO:OrthogonalMatchingPursuit()
2023-05-09 11:22:10,252:INFO:create_model() successfully completed......................................
2023-05-09 11:22:10,319:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:10,319:INFO:Creating metrics dataframe
2023-05-09 11:22:10,322:INFO:Initializing Lasso Regression
2023-05-09 11:22:10,322:INFO:Total runtime is 0.25748275915781654 minutes
2023-05-09 11:22:10,322:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:10,323:INFO:Initializing create_model()
2023-05-09 11:22:10,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:10,323:INFO:Checking exceptions
2023-05-09 11:22:10,323:INFO:Importing libraries
2023-05-09 11:22:10,323:INFO:Copying training dataset
2023-05-09 11:22:10,325:INFO:Defining folds
2023-05-09 11:22:10,325:INFO:Declaring metric variables
2023-05-09 11:22:10,325:INFO:Importing untrained model
2023-05-09 11:22:10,325:INFO:Lasso Regression Imported successfully
2023-05-09 11:22:10,326:INFO:Starting cross validation
2023-05-09 11:22:10,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:10,836:INFO:Calculating mean and std
2023-05-09 11:22:10,837:INFO:Creating metrics dataframe
2023-05-09 11:22:10,854:INFO:Uploading results into container
2023-05-09 11:22:10,855:INFO:Uploading model into container now
2023-05-09 11:22:10,855:INFO:_master_model_container: 15
2023-05-09 11:22:10,855:INFO:_display_container: 2
2023-05-09 11:22:10,855:INFO:Lasso(random_state=3223)
2023-05-09 11:22:10,855:INFO:create_model() successfully completed......................................
2023-05-09 11:22:10,921:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:10,921:INFO:Creating metrics dataframe
2023-05-09 11:22:10,924:INFO:Initializing Elastic Net
2023-05-09 11:22:10,924:INFO:Total runtime is 0.2675096273422241 minutes
2023-05-09 11:22:10,925:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:10,925:INFO:Initializing create_model()
2023-05-09 11:22:10,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:10,925:INFO:Checking exceptions
2023-05-09 11:22:10,925:INFO:Importing libraries
2023-05-09 11:22:10,925:INFO:Copying training dataset
2023-05-09 11:22:10,927:INFO:Defining folds
2023-05-09 11:22:10,927:INFO:Declaring metric variables
2023-05-09 11:22:10,927:INFO:Importing untrained model
2023-05-09 11:22:10,928:INFO:Elastic Net Imported successfully
2023-05-09 11:22:10,928:INFO:Starting cross validation
2023-05-09 11:22:10,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:11,422:INFO:Calculating mean and std
2023-05-09 11:22:11,423:INFO:Creating metrics dataframe
2023-05-09 11:22:11,441:INFO:Uploading results into container
2023-05-09 11:22:11,441:INFO:Uploading model into container now
2023-05-09 11:22:11,442:INFO:_master_model_container: 16
2023-05-09 11:22:11,442:INFO:_display_container: 2
2023-05-09 11:22:11,442:INFO:ElasticNet(random_state=3223)
2023-05-09 11:22:11,442:INFO:create_model() successfully completed......................................
2023-05-09 11:22:11,510:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:11,510:INFO:Creating metrics dataframe
2023-05-09 11:22:11,513:INFO:Initializing Lasso Least Angle Regression
2023-05-09 11:22:11,513:INFO:Total runtime is 0.2773379365603129 minutes
2023-05-09 11:22:11,514:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:11,514:INFO:Initializing create_model()
2023-05-09 11:22:11,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:11,514:INFO:Checking exceptions
2023-05-09 11:22:11,514:INFO:Importing libraries
2023-05-09 11:22:11,514:INFO:Copying training dataset
2023-05-09 11:22:11,516:INFO:Defining folds
2023-05-09 11:22:11,516:INFO:Declaring metric variables
2023-05-09 11:22:11,517:INFO:Importing untrained model
2023-05-09 11:22:11,517:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 11:22:11,517:INFO:Starting cross validation
2023-05-09 11:22:11,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:12,032:INFO:Calculating mean and std
2023-05-09 11:22:12,033:INFO:Creating metrics dataframe
2023-05-09 11:22:12,050:INFO:Uploading results into container
2023-05-09 11:22:12,050:INFO:Uploading model into container now
2023-05-09 11:22:12,050:INFO:_master_model_container: 17
2023-05-09 11:22:12,050:INFO:_display_container: 2
2023-05-09 11:22:12,050:INFO:LassoLars(random_state=3223)
2023-05-09 11:22:12,050:INFO:create_model() successfully completed......................................
2023-05-09 11:22:12,117:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:12,117:INFO:Creating metrics dataframe
2023-05-09 11:22:12,120:INFO:Initializing Passive Aggressive Regressor
2023-05-09 11:22:12,121:INFO:Total runtime is 0.28747286001841227 minutes
2023-05-09 11:22:12,121:INFO:SubProcess create_model() called ==================================
2023-05-09 11:22:12,121:INFO:Initializing create_model()
2023-05-09 11:22:12,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E09843700>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:12,121:INFO:Checking exceptions
2023-05-09 11:22:12,121:INFO:Importing libraries
2023-05-09 11:22:12,121:INFO:Copying training dataset
2023-05-09 11:22:12,123:INFO:Defining folds
2023-05-09 11:22:12,123:INFO:Declaring metric variables
2023-05-09 11:22:12,123:INFO:Importing untrained model
2023-05-09 11:22:12,124:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 11:22:12,124:INFO:Starting cross validation
2023-05-09 11:22:12,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 11:22:12,623:INFO:Calculating mean and std
2023-05-09 11:22:12,623:INFO:Creating metrics dataframe
2023-05-09 11:22:12,641:INFO:Uploading results into container
2023-05-09 11:22:12,641:INFO:Uploading model into container now
2023-05-09 11:22:12,641:INFO:_master_model_container: 18
2023-05-09 11:22:12,641:INFO:_display_container: 2
2023-05-09 11:22:12,642:INFO:PassiveAggressiveRegressor(random_state=3223)
2023-05-09 11:22:12,642:INFO:create_model() successfully completed......................................
2023-05-09 11:22:12,708:INFO:SubProcess create_model() end ==================================
2023-05-09 11:22:12,708:INFO:Creating metrics dataframe
2023-05-09 11:22:12,714:INFO:Initializing create_model()
2023-05-09 11:22:12,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=GradientBoostingRegressor(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:12,714:INFO:Checking exceptions
2023-05-09 11:22:12,714:INFO:Importing libraries
2023-05-09 11:22:12,714:INFO:Copying training dataset
2023-05-09 11:22:12,717:INFO:Defining folds
2023-05-09 11:22:12,717:INFO:Declaring metric variables
2023-05-09 11:22:12,717:INFO:Importing untrained model
2023-05-09 11:22:12,717:INFO:Declaring custom model
2023-05-09 11:22:12,717:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 11:22:12,718:INFO:Cross validation set to False
2023-05-09 11:22:12,718:INFO:Fitting Model
2023-05-09 11:22:12,850:INFO:GradientBoostingRegressor(random_state=3223)
2023-05-09 11:22:12,850:INFO:create_model() successfully completed......................................
2023-05-09 11:22:12,916:INFO:Initializing create_model()
2023-05-09 11:22:12,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:12,916:INFO:Checking exceptions
2023-05-09 11:22:12,917:INFO:Importing libraries
2023-05-09 11:22:12,917:INFO:Copying training dataset
2023-05-09 11:22:12,919:INFO:Defining folds
2023-05-09 11:22:12,919:INFO:Declaring metric variables
2023-05-09 11:22:12,920:INFO:Importing untrained model
2023-05-09 11:22:12,920:INFO:Declaring custom model
2023-05-09 11:22:12,920:INFO:Extra Trees Regressor Imported successfully
2023-05-09 11:22:12,920:INFO:Cross validation set to False
2023-05-09 11:22:12,920:INFO:Fitting Model
2023-05-09 11:22:13,140:INFO:ExtraTreesRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:22:13,140:INFO:create_model() successfully completed......................................
2023-05-09 11:22:13,206:INFO:Initializing create_model()
2023-05-09 11:22:13,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=RandomForestRegressor(n_jobs=1, random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:13,207:INFO:Checking exceptions
2023-05-09 11:22:13,207:INFO:Importing libraries
2023-05-09 11:22:13,207:INFO:Copying training dataset
2023-05-09 11:22:13,209:INFO:Defining folds
2023-05-09 11:22:13,209:INFO:Declaring metric variables
2023-05-09 11:22:13,209:INFO:Importing untrained model
2023-05-09 11:22:13,209:INFO:Declaring custom model
2023-05-09 11:22:13,210:INFO:Random Forest Regressor Imported successfully
2023-05-09 11:22:13,210:INFO:Cross validation set to False
2023-05-09 11:22:13,210:INFO:Fitting Model
2023-05-09 11:22:13,558:INFO:RandomForestRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:22:13,558:INFO:create_model() successfully completed......................................
2023-05-09 11:22:13,626:INFO:Initializing create_model()
2023-05-09 11:22:13,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LGBMRegressor(n_jobs=1, random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:13,626:INFO:Checking exceptions
2023-05-09 11:22:13,627:INFO:Importing libraries
2023-05-09 11:22:13,627:INFO:Copying training dataset
2023-05-09 11:22:13,629:INFO:Defining folds
2023-05-09 11:22:13,629:INFO:Declaring metric variables
2023-05-09 11:22:13,629:INFO:Importing untrained model
2023-05-09 11:22:13,629:INFO:Declaring custom model
2023-05-09 11:22:13,630:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 11:22:13,630:INFO:Cross validation set to False
2023-05-09 11:22:13,630:INFO:Fitting Model
2023-05-09 11:22:13,687:INFO:LGBMRegressor(n_jobs=1, random_state=3223)
2023-05-09 11:22:13,687:INFO:create_model() successfully completed......................................
2023-05-09 11:22:13,753:INFO:Initializing create_model()
2023-05-09 11:22:13,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=AdaBoostRegressor(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:13,753:INFO:Checking exceptions
2023-05-09 11:22:13,753:INFO:Importing libraries
2023-05-09 11:22:13,753:INFO:Copying training dataset
2023-05-09 11:22:13,756:INFO:Defining folds
2023-05-09 11:22:13,756:INFO:Declaring metric variables
2023-05-09 11:22:13,756:INFO:Importing untrained model
2023-05-09 11:22:13,756:INFO:Declaring custom model
2023-05-09 11:22:13,757:INFO:str Imported successfully
2023-05-09 11:22:13,757:INFO:Cross validation set to False
2023-05-09 11:22:13,757:INFO:Fitting Model
2023-05-09 11:22:13,853:INFO:AdaBoostRegressor(random_state=3223)
2023-05-09 11:22:13,853:INFO:create_model() successfully completed......................................
2023-05-09 11:22:13,918:INFO:Initializing create_model()
2023-05-09 11:22:13,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=DecisionTreeRegressor(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:13,918:INFO:Checking exceptions
2023-05-09 11:22:13,919:INFO:Importing libraries
2023-05-09 11:22:13,919:INFO:Copying training dataset
2023-05-09 11:22:13,921:INFO:Defining folds
2023-05-09 11:22:13,921:INFO:Declaring metric variables
2023-05-09 11:22:13,922:INFO:Importing untrained model
2023-05-09 11:22:13,922:INFO:Declaring custom model
2023-05-09 11:22:13,922:INFO:Decision Tree Regressor Imported successfully
2023-05-09 11:22:13,922:INFO:Cross validation set to False
2023-05-09 11:22:13,922:INFO:Fitting Model
2023-05-09 11:22:13,962:INFO:DecisionTreeRegressor(random_state=3223)
2023-05-09 11:22:13,962:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,029:INFO:Initializing create_model()
2023-05-09 11:22:14,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LinearRegression(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,029:INFO:Checking exceptions
2023-05-09 11:22:14,029:INFO:Importing libraries
2023-05-09 11:22:14,029:INFO:Copying training dataset
2023-05-09 11:22:14,032:INFO:Defining folds
2023-05-09 11:22:14,032:INFO:Declaring metric variables
2023-05-09 11:22:14,032:INFO:Importing untrained model
2023-05-09 11:22:14,032:INFO:Declaring custom model
2023-05-09 11:22:14,032:INFO:Linear Regression Imported successfully
2023-05-09 11:22:14,033:INFO:Cross validation set to False
2023-05-09 11:22:14,033:INFO:Fitting Model
2023-05-09 11:22:14,071:INFO:LinearRegression(n_jobs=1)
2023-05-09 11:22:14,071:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,137:INFO:Initializing create_model()
2023-05-09 11:22:14,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Lars(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,137:INFO:Checking exceptions
2023-05-09 11:22:14,138:INFO:Importing libraries
2023-05-09 11:22:14,138:INFO:Copying training dataset
2023-05-09 11:22:14,140:INFO:Defining folds
2023-05-09 11:22:14,140:INFO:Declaring metric variables
2023-05-09 11:22:14,140:INFO:Importing untrained model
2023-05-09 11:22:14,140:INFO:Declaring custom model
2023-05-09 11:22:14,141:INFO:Least Angle Regression Imported successfully
2023-05-09 11:22:14,141:INFO:Cross validation set to False
2023-05-09 11:22:14,141:INFO:Fitting Model
2023-05-09 11:22:14,182:INFO:Lars(random_state=3223)
2023-05-09 11:22:14,182:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,247:INFO:Initializing create_model()
2023-05-09 11:22:14,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Ridge(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,247:INFO:Checking exceptions
2023-05-09 11:22:14,248:INFO:Importing libraries
2023-05-09 11:22:14,248:INFO:Copying training dataset
2023-05-09 11:22:14,250:INFO:Defining folds
2023-05-09 11:22:14,250:INFO:Declaring metric variables
2023-05-09 11:22:14,250:INFO:Importing untrained model
2023-05-09 11:22:14,251:INFO:Declaring custom model
2023-05-09 11:22:14,251:INFO:Ridge Regression Imported successfully
2023-05-09 11:22:14,251:INFO:Cross validation set to False
2023-05-09 11:22:14,251:INFO:Fitting Model
2023-05-09 11:22:14,290:INFO:Ridge(random_state=3223)
2023-05-09 11:22:14,291:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,356:INFO:Initializing create_model()
2023-05-09 11:22:14,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,356:INFO:Checking exceptions
2023-05-09 11:22:14,356:INFO:Importing libraries
2023-05-09 11:22:14,357:INFO:Copying training dataset
2023-05-09 11:22:14,359:INFO:Defining folds
2023-05-09 11:22:14,359:INFO:Declaring metric variables
2023-05-09 11:22:14,359:INFO:Importing untrained model
2023-05-09 11:22:14,359:INFO:Declaring custom model
2023-05-09 11:22:14,359:INFO:Bayesian Ridge Imported successfully
2023-05-09 11:22:14,360:INFO:Cross validation set to False
2023-05-09 11:22:14,360:INFO:Fitting Model
2023-05-09 11:22:14,400:INFO:BayesianRidge()
2023-05-09 11:22:14,400:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,476:INFO:Initializing create_model()
2023-05-09 11:22:14,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ElasticNet(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,476:INFO:Checking exceptions
2023-05-09 11:22:14,477:INFO:Importing libraries
2023-05-09 11:22:14,477:INFO:Copying training dataset
2023-05-09 11:22:14,481:INFO:Defining folds
2023-05-09 11:22:14,481:INFO:Declaring metric variables
2023-05-09 11:22:14,481:INFO:Importing untrained model
2023-05-09 11:22:14,481:INFO:Declaring custom model
2023-05-09 11:22:14,481:INFO:Elastic Net Imported successfully
2023-05-09 11:22:14,481:INFO:Cross validation set to False
2023-05-09 11:22:14,481:INFO:Fitting Model
2023-05-09 11:22:14,531:INFO:ElasticNet(random_state=3223)
2023-05-09 11:22:14,531:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,600:INFO:Initializing create_model()
2023-05-09 11:22:14,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Lasso(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,600:INFO:Checking exceptions
2023-05-09 11:22:14,601:INFO:Importing libraries
2023-05-09 11:22:14,601:INFO:Copying training dataset
2023-05-09 11:22:14,603:INFO:Defining folds
2023-05-09 11:22:14,603:INFO:Declaring metric variables
2023-05-09 11:22:14,603:INFO:Importing untrained model
2023-05-09 11:22:14,604:INFO:Declaring custom model
2023-05-09 11:22:14,604:INFO:Lasso Regression Imported successfully
2023-05-09 11:22:14,604:INFO:Cross validation set to False
2023-05-09 11:22:14,604:INFO:Fitting Model
2023-05-09 11:22:14,643:INFO:Lasso(random_state=3223)
2023-05-09 11:22:14,644:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,710:INFO:Initializing create_model()
2023-05-09 11:22:14,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LassoLars(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,710:INFO:Checking exceptions
2023-05-09 11:22:14,710:INFO:Importing libraries
2023-05-09 11:22:14,711:INFO:Copying training dataset
2023-05-09 11:22:14,713:INFO:Defining folds
2023-05-09 11:22:14,713:INFO:Declaring metric variables
2023-05-09 11:22:14,713:INFO:Importing untrained model
2023-05-09 11:22:14,713:INFO:Declaring custom model
2023-05-09 11:22:14,714:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 11:22:14,715:INFO:Cross validation set to False
2023-05-09 11:22:14,715:INFO:Fitting Model
2023-05-09 11:22:14,754:INFO:LassoLars(random_state=3223)
2023-05-09 11:22:14,754:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,819:INFO:Initializing create_model()
2023-05-09 11:22:14,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,819:INFO:Checking exceptions
2023-05-09 11:22:14,820:INFO:Importing libraries
2023-05-09 11:22:14,820:INFO:Copying training dataset
2023-05-09 11:22:14,822:INFO:Defining folds
2023-05-09 11:22:14,822:INFO:Declaring metric variables
2023-05-09 11:22:14,824:INFO:Importing untrained model
2023-05-09 11:22:14,824:INFO:Declaring custom model
2023-05-09 11:22:14,824:INFO:Huber Regressor Imported successfully
2023-05-09 11:22:14,824:INFO:Cross validation set to False
2023-05-09 11:22:14,824:INFO:Fitting Model
2023-05-09 11:22:14,863:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:22:14,878:INFO:HuberRegressor()
2023-05-09 11:22:14,879:INFO:create_model() successfully completed......................................
2023-05-09 11:22:14,944:INFO:Initializing create_model()
2023-05-09 11:22:14,944:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=KNeighborsRegressor(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:14,944:INFO:Checking exceptions
2023-05-09 11:22:14,945:INFO:Importing libraries
2023-05-09 11:22:14,945:INFO:Copying training dataset
2023-05-09 11:22:14,947:INFO:Defining folds
2023-05-09 11:22:14,947:INFO:Declaring metric variables
2023-05-09 11:22:14,948:INFO:Importing untrained model
2023-05-09 11:22:14,948:INFO:Declaring custom model
2023-05-09 11:22:14,948:INFO:K Neighbors Regressor Imported successfully
2023-05-09 11:22:14,948:INFO:Cross validation set to False
2023-05-09 11:22:14,949:INFO:Fitting Model
2023-05-09 11:22:14,987:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 11:22:14,987:INFO:create_model() successfully completed......................................
2023-05-09 11:22:15,053:INFO:Initializing create_model()
2023-05-09 11:22:15,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:15,053:INFO:Checking exceptions
2023-05-09 11:22:15,053:INFO:Importing libraries
2023-05-09 11:22:15,054:INFO:Copying training dataset
2023-05-09 11:22:15,056:INFO:Defining folds
2023-05-09 11:22:15,056:INFO:Declaring metric variables
2023-05-09 11:22:15,056:INFO:Importing untrained model
2023-05-09 11:22:15,056:INFO:Declaring custom model
2023-05-09 11:22:15,056:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 11:22:15,057:INFO:Cross validation set to False
2023-05-09 11:22:15,057:INFO:Fitting Model
2023-05-09 11:22:15,096:INFO:OrthogonalMatchingPursuit()
2023-05-09 11:22:15,096:INFO:create_model() successfully completed......................................
2023-05-09 11:22:15,161:INFO:Initializing create_model()
2023-05-09 11:22:15,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:15,161:INFO:Checking exceptions
2023-05-09 11:22:15,162:INFO:Importing libraries
2023-05-09 11:22:15,162:INFO:Copying training dataset
2023-05-09 11:22:15,164:INFO:Defining folds
2023-05-09 11:22:15,164:INFO:Declaring metric variables
2023-05-09 11:22:15,164:INFO:Importing untrained model
2023-05-09 11:22:15,164:INFO:Declaring custom model
2023-05-09 11:22:15,165:INFO:Dummy Regressor Imported successfully
2023-05-09 11:22:15,165:INFO:Cross validation set to False
2023-05-09 11:22:15,165:INFO:Fitting Model
2023-05-09 11:22:15,203:INFO:DummyRegressor()
2023-05-09 11:22:15,203:INFO:create_model() successfully completed......................................
2023-05-09 11:22:15,270:INFO:Initializing create_model()
2023-05-09 11:22:15,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=PassiveAggressiveRegressor(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 11:22:15,270:INFO:Checking exceptions
2023-05-09 11:22:15,270:INFO:Importing libraries
2023-05-09 11:22:15,270:INFO:Copying training dataset
2023-05-09 11:22:15,273:INFO:Defining folds
2023-05-09 11:22:15,273:INFO:Declaring metric variables
2023-05-09 11:22:15,273:INFO:Importing untrained model
2023-05-09 11:22:15,273:INFO:Declaring custom model
2023-05-09 11:22:15,273:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 11:22:15,274:INFO:Cross validation set to False
2023-05-09 11:22:15,274:INFO:Fitting Model
2023-05-09 11:22:15,314:INFO:PassiveAggressiveRegressor(random_state=3223)
2023-05-09 11:22:15,314:INFO:create_model() successfully completed......................................
2023-05-09 11:22:15,382:INFO:_master_model_container: 18
2023-05-09 11:22:15,382:INFO:_display_container: 2
2023-05-09 11:22:15,383:INFO:[GradientBoostingRegressor(random_state=3223), ExtraTreesRegressor(n_jobs=1, random_state=3223), RandomForestRegressor(n_jobs=1, random_state=3223), LGBMRegressor(n_jobs=1, random_state=3223), AdaBoostRegressor(random_state=3223), DecisionTreeRegressor(random_state=3223), LinearRegression(n_jobs=1), Lars(random_state=3223), Ridge(random_state=3223), BayesianRidge(), ElasticNet(random_state=3223), Lasso(random_state=3223), LassoLars(random_state=3223), HuberRegressor(), KNeighborsRegressor(n_jobs=1), OrthogonalMatchingPursuit(), DummyRegressor(), PassiveAggressiveRegressor(random_state=3223)]
2023-05-09 11:22:15,383:INFO:compare_models() successfully completed......................................
2023-05-09 11:22:15,397:INFO:Initializing predict_model()
2023-05-09 11:22:15,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=GradientBoostingRegressor(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,398:INFO:Checking exceptions
2023-05-09 11:22:15,398:INFO:Preloading libraries
2023-05-09 11:22:15,398:INFO:Set up data.
2023-05-09 11:22:15,402:INFO:Set up index.
2023-05-09 11:22:15,496:INFO:Initializing predict_model()
2023-05-09 11:22:15,496:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,496:INFO:Checking exceptions
2023-05-09 11:22:15,496:INFO:Preloading libraries
2023-05-09 11:22:15,496:INFO:Set up data.
2023-05-09 11:22:15,501:INFO:Set up index.
2023-05-09 11:22:15,600:INFO:Initializing predict_model()
2023-05-09 11:22:15,600:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=RandomForestRegressor(n_jobs=1, random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,600:INFO:Checking exceptions
2023-05-09 11:22:15,600:INFO:Preloading libraries
2023-05-09 11:22:15,601:INFO:Set up data.
2023-05-09 11:22:15,605:INFO:Set up index.
2023-05-09 11:22:15,700:INFO:Initializing predict_model()
2023-05-09 11:22:15,700:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LGBMRegressor(n_jobs=1, random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,700:INFO:Checking exceptions
2023-05-09 11:22:15,700:INFO:Preloading libraries
2023-05-09 11:22:15,700:INFO:Set up data.
2023-05-09 11:22:15,705:INFO:Set up index.
2023-05-09 11:22:15,794:INFO:Initializing predict_model()
2023-05-09 11:22:15,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=AdaBoostRegressor(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,795:INFO:Checking exceptions
2023-05-09 11:22:15,795:INFO:Preloading libraries
2023-05-09 11:22:15,795:INFO:Set up data.
2023-05-09 11:22:15,799:INFO:Set up index.
2023-05-09 11:22:15,891:INFO:Initializing predict_model()
2023-05-09 11:22:15,891:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=DecisionTreeRegressor(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,891:INFO:Checking exceptions
2023-05-09 11:22:15,891:INFO:Preloading libraries
2023-05-09 11:22:15,891:INFO:Set up data.
2023-05-09 11:22:15,895:INFO:Set up index.
2023-05-09 11:22:15,984:INFO:Initializing predict_model()
2023-05-09 11:22:15,984:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LinearRegression(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:15,984:INFO:Checking exceptions
2023-05-09 11:22:15,984:INFO:Preloading libraries
2023-05-09 11:22:15,985:INFO:Set up data.
2023-05-09 11:22:15,989:INFO:Set up index.
2023-05-09 11:22:16,078:INFO:Initializing predict_model()
2023-05-09 11:22:16,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Lars(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,078:INFO:Checking exceptions
2023-05-09 11:22:16,078:INFO:Preloading libraries
2023-05-09 11:22:16,078:INFO:Set up data.
2023-05-09 11:22:16,082:INFO:Set up index.
2023-05-09 11:22:16,171:INFO:Initializing predict_model()
2023-05-09 11:22:16,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Ridge(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,172:INFO:Checking exceptions
2023-05-09 11:22:16,172:INFO:Preloading libraries
2023-05-09 11:22:16,172:INFO:Set up data.
2023-05-09 11:22:16,176:INFO:Set up index.
2023-05-09 11:22:16,265:INFO:Initializing predict_model()
2023-05-09 11:22:16,265:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,265:INFO:Checking exceptions
2023-05-09 11:22:16,265:INFO:Preloading libraries
2023-05-09 11:22:16,265:INFO:Set up data.
2023-05-09 11:22:16,270:INFO:Set up index.
2023-05-09 11:22:16,359:INFO:Initializing predict_model()
2023-05-09 11:22:16,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=ElasticNet(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,359:INFO:Checking exceptions
2023-05-09 11:22:16,359:INFO:Preloading libraries
2023-05-09 11:22:16,359:INFO:Set up data.
2023-05-09 11:22:16,363:INFO:Set up index.
2023-05-09 11:22:16,453:INFO:Initializing predict_model()
2023-05-09 11:22:16,453:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=Lasso(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,453:INFO:Checking exceptions
2023-05-09 11:22:16,453:INFO:Preloading libraries
2023-05-09 11:22:16,453:INFO:Set up data.
2023-05-09 11:22:16,457:INFO:Set up index.
2023-05-09 11:22:16,551:INFO:Initializing predict_model()
2023-05-09 11:22:16,551:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=LassoLars(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,551:INFO:Checking exceptions
2023-05-09 11:22:16,551:INFO:Preloading libraries
2023-05-09 11:22:16,551:INFO:Set up data.
2023-05-09 11:22:16,555:INFO:Set up index.
2023-05-09 11:22:16,646:INFO:Initializing predict_model()
2023-05-09 11:22:16,646:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,646:INFO:Checking exceptions
2023-05-09 11:22:16,646:INFO:Preloading libraries
2023-05-09 11:22:16,646:INFO:Set up data.
2023-05-09 11:22:16,651:INFO:Set up index.
2023-05-09 11:22:16,744:INFO:Initializing predict_model()
2023-05-09 11:22:16,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=KNeighborsRegressor(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,744:INFO:Checking exceptions
2023-05-09 11:22:16,745:INFO:Preloading libraries
2023-05-09 11:22:16,745:INFO:Set up data.
2023-05-09 11:22:16,749:INFO:Set up index.
2023-05-09 11:22:16,839:INFO:Initializing predict_model()
2023-05-09 11:22:16,839:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,839:INFO:Checking exceptions
2023-05-09 11:22:16,839:INFO:Preloading libraries
2023-05-09 11:22:16,839:INFO:Set up data.
2023-05-09 11:22:16,844:INFO:Set up index.
2023-05-09 11:22:16,934:INFO:Initializing predict_model()
2023-05-09 11:22:16,934:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:16,934:INFO:Checking exceptions
2023-05-09 11:22:16,934:INFO:Preloading libraries
2023-05-09 11:22:16,934:INFO:Set up data.
2023-05-09 11:22:16,938:INFO:Set up index.
2023-05-09 11:22:17,028:INFO:Initializing predict_model()
2023-05-09 11:22:17,028:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023E0942FA00>, estimator=PassiveAggressiveRegressor(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023E099FFA60>)
2023-05-09 11:22:17,028:INFO:Checking exceptions
2023-05-09 11:22:17,029:INFO:Preloading libraries
2023-05-09 11:22:17,029:INFO:Set up data.
2023-05-09 11:22:17,032:INFO:Set up index.
2023-05-09 11:23:16,712:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:16,855:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:17,020:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:17,374:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:17,415:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:17,565:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:17,643:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:17,659:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:17,754:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:17,994:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:18,134:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:18,316:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:18,706:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:18,751:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:18,913:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:18,982:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:19,000:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:19,074:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:19,097:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:19,250:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:19,421:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:19,775:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:19,816:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:19,958:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,020:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,037:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:20,098:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,118:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,257:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:20,437:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:20,788:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,828:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:20,973:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,035:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,051:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:21,110:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,130:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,270:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:21,437:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:21,791:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,832:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:21,978:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,040:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,056:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:22,115:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,136:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,279:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:22,449:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:22,790:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,845:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:22,994:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:23,057:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:23,073:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:23,133:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:23,152:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:23,292:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:23,446:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:23,804:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:23,845:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,003:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,066:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,082:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:24,143:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,162:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,301:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:24,462:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:24,816:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:24,856:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,014:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,077:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,092:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:25,152:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,172:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,312:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:25,475:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:25,826:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:25,866:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,025:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,087:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,103:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:26,163:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,183:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,324:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:26,494:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:26,842:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:26,883:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:27,042:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:27,105:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:27,121:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:27,181:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:52,669:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:52,808:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:52,974:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:53,320:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,362:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,519:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,584:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,601:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:53,666:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,685:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:53,823:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:53,990:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:54,331:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,384:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,532:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,591:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,613:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:54,672:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,691:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:54,831:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:54,999:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:55,340:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,392:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,540:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,597:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,620:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:55,679:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,699:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:55,836:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:56,004:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:56,350:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,390:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,549:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,611:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,628:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:56,689:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,708:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:56,843:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:57,008:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:57,345:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,385:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,544:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,607:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,625:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:57,684:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,705:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:57,840:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:58,007:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:58,342:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,381:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,542:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,605:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,621:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:58,681:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,700:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:58,837:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:59,003:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:23:59,344:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,384:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,547:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,609:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,624:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:23:59,685:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,705:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:23:59,842:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:00,009:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:00,354:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,394:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,553:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,617:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,633:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:24:00,695:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,726:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:00,863:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:01,030:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:01,367:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,407:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,568:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,631:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,647:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:24:01,709:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,728:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\ensemble\_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:01,867:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:02,034:WARNING:C:/Users/14357/github/research/stressor/inst/python/refit.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  refit_mlm_new_model = r.refit_mlm_temp.fit(r.refit_mlm_X, r.refit_mlm_y)

2023-05-09 11:24:02,378:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:02,419:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:02,581:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:02,645:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 11:24:02,661:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 11:24:02,721:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\utils\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-05-09 12:04:57,322:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 12:04:57,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 12:04:57,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 12:04:57,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 12:05:04,141:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-09 12:05:12,422:INFO:PyCaret RegressionExperiment
2023-05-09 12:05:12,422:INFO:Logging name: reg-default-name
2023-05-09 12:05:12,422:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-09 12:05:12,422:INFO:version 3.0.0
2023-05-09 12:05:12,422:INFO:Initializing setup()
2023-05-09 12:05:12,422:INFO:self.USI: b817
2023-05-09 12:05:12,422:INFO:self._variable_keys: {'_available_plots', 'exp_name_log', 'data', 'X_test', 'y_train', 'html_param', 'fold_shuffle_param', 'fold_generator', 'transform_target_param', 'y_test', 'log_plots_param', 'logging_param', 'idx', 'X_train', 'X', 'gpu_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'memory', 'target_param', 'fold_groups_param', 'pipeline', '_ml_usecase', 'exp_id', 'y', 'seed'}
2023-05-09 12:05:12,422:INFO:Checking environment
2023-05-09 12:05:12,422:INFO:python_version: 3.8.10
2023-05-09 12:05:12,422:INFO:python_build: ('tags/v3.8.10:3d8993a', 'May  3 2021 11:48:03')
2023-05-09 12:05:12,422:INFO:machine: AMD64
2023-05-09 12:05:12,423:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-09 12:05:12,430:INFO:Memory: svmem(total=7896625152, available=960847872, percent=87.8, used=6935777280, free=960847872)
2023-05-09 12:05:12,430:INFO:Physical Core: 8
2023-05-09 12:05:12,430:INFO:Logical Core: 16
2023-05-09 12:05:12,430:INFO:Checking libraries
2023-05-09 12:05:12,430:INFO:System:
2023-05-09 12:05:12,430:INFO:    python: 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
2023-05-09 12:05:12,430:INFO:executable: C:/Users/14357/Documents/.virtualenvs/stressor-env2023-05-09104458/Scripts/python.exe
2023-05-09 12:05:12,430:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-09 12:05:12,430:INFO:PyCaret required dependencies:
2023-05-09 12:05:12,430:INFO:                 pip: 23.1.2
2023-05-09 12:05:12,430:INFO:          setuptools: 67.7.2
2023-05-09 12:05:12,430:INFO:             pycaret: 3.0.0
2023-05-09 12:05:12,430:INFO:             IPython: 8.12.2
2023-05-09 12:05:12,430:INFO:          ipywidgets: 8.0.6
2023-05-09 12:05:12,430:INFO:                tqdm: 4.65.0
2023-05-09 12:05:12,430:INFO:               numpy: 1.24.3
2023-05-09 12:05:12,430:INFO:              pandas: 1.5.3
2023-05-09 12:05:12,431:INFO:              jinja2: 3.1.2
2023-05-09 12:05:12,431:INFO:               scipy: 1.10.1
2023-05-09 12:05:12,431:INFO:              joblib: 1.2.0
2023-05-09 12:05:12,431:INFO:             sklearn: 1.2.2
2023-05-09 12:05:12,431:INFO:                pyod: 1.0.9
2023-05-09 12:05:12,431:INFO:            imblearn: 0.10.1
2023-05-09 12:05:12,431:INFO:   category_encoders: 2.6.0
2023-05-09 12:05:12,431:INFO:            lightgbm: 3.3.5
2023-05-09 12:05:12,431:INFO:               numba: 0.57.0
2023-05-09 12:05:12,431:INFO:            requests: 2.30.0
2023-05-09 12:05:12,431:INFO:          matplotlib: 3.7.1
2023-05-09 12:05:12,431:INFO:          scikitplot: 0.3.7
2023-05-09 12:05:12,431:INFO:         yellowbrick: 1.5
2023-05-09 12:05:12,431:INFO:              plotly: 5.14.1
2023-05-09 12:05:12,431:INFO:             kaleido: 0.2.1
2023-05-09 12:05:12,431:INFO:         statsmodels: 0.14.0
2023-05-09 12:05:12,431:INFO:              sktime: 0.18.0
2023-05-09 12:05:12,431:INFO:               tbats: 1.1.3
2023-05-09 12:05:12,431:INFO:            pmdarima: 2.0.3
2023-05-09 12:05:12,431:INFO:              psutil: 5.9.5
2023-05-09 12:05:12,431:INFO:PyCaret optional dependencies:
2023-05-09 12:05:12,464:INFO:                shap: Not installed
2023-05-09 12:05:12,464:INFO:           interpret: Not installed
2023-05-09 12:05:12,464:INFO:                umap: Not installed
2023-05-09 12:05:12,464:INFO:    pandas_profiling: Not installed
2023-05-09 12:05:12,464:INFO:  explainerdashboard: Not installed
2023-05-09 12:05:12,464:INFO:             autoviz: Not installed
2023-05-09 12:05:12,464:INFO:           fairlearn: Not installed
2023-05-09 12:05:12,464:INFO:             xgboost: Not installed
2023-05-09 12:05:12,464:INFO:            catboost: Not installed
2023-05-09 12:05:12,464:INFO:              kmodes: Not installed
2023-05-09 12:05:12,464:INFO:             mlxtend: Not installed
2023-05-09 12:05:12,464:INFO:       statsforecast: Not installed
2023-05-09 12:05:12,464:INFO:        tune_sklearn: Not installed
2023-05-09 12:05:12,464:INFO:                 ray: Not installed
2023-05-09 12:05:12,464:INFO:            hyperopt: Not installed
2023-05-09 12:05:12,464:INFO:              optuna: Not installed
2023-05-09 12:05:12,464:INFO:               skopt: Not installed
2023-05-09 12:05:12,464:INFO:              mlflow: Not installed
2023-05-09 12:05:12,465:INFO:              gradio: Not installed
2023-05-09 12:05:12,465:INFO:             fastapi: Not installed
2023-05-09 12:05:12,465:INFO:             uvicorn: Not installed
2023-05-09 12:05:12,465:INFO:              m2cgen: Not installed
2023-05-09 12:05:12,465:INFO:           evidently: Not installed
2023-05-09 12:05:12,465:INFO:               fugue: Not installed
2023-05-09 12:05:12,465:INFO:           streamlit: Not installed
2023-05-09 12:05:12,465:INFO:             prophet: Not installed
2023-05-09 12:05:12,465:INFO:None
2023-05-09 12:05:12,465:INFO:Set up data.
2023-05-09 12:05:12,479:INFO:Set up train/test split.
2023-05-09 12:05:12,485:INFO:Set up index.
2023-05-09 12:05:12,485:INFO:Set up folding strategy.
2023-05-09 12:05:12,485:INFO:Assigning column types.
2023-05-09 12:05:12,490:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-09 12:05:12,490:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,497:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:12,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:12,818:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,823:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,829:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:12,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:12,952:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-09 12:05:12,959:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 12:05:12,965:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,032:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,097:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,102:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,228:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-09 12:05:13,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,451:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,518:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,575:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-09 12:05:13,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,799:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,854:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,855:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-09 12:05:13,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:13,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:13,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-09 12:05:14,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,129:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-09 12:05:14,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,440:INFO:Preparing preprocessing pipeline...
2023-05-09 12:05:14,440:INFO:Set up simple imputation.
2023-05-09 12:05:14,484:INFO:Finished creating preprocessing pipeline.
2023-05-09 12:05:14,498:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\14357\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['crim', 'zn', 'indus', 'nox', 'rm',
                                             'age', 'dis', 'rad', 'tax',
                                             'ptratio', 'b', 'lstat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-05-09 12:05:14,498:INFO:Creating final display dataframe.
2023-05-09 12:05:14,600:INFO:Setup _display_container:                     Description             Value
0                    Session id              3130
1                        Target             cmedv
2                   Target type        Regression
3           Original data shape         (456, 13)
4        Transformed data shape         (456, 13)
5   Transformed train set shape         (319, 13)
6    Transformed test set shape         (137, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                 1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b817
2023-05-09 12:05:14,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-09 12:05:14,883:INFO:setup() successfully completed in 2.53s...............
2023-05-09 12:05:14,884:INFO:Initializing compare_models()
2023-05-09 12:05:14,884:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, include=['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], fold=None, round=4, cross_validation=True, sort=RMSE, n_select=9999, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, 'include': ['ada', 'et', 'lightgbm', 'gbr', 'lr', 'rf', 'ridge', 'knn', 'dt', 'dummy', 'lar', 'br', 'huber', 'omp', 'lasso', 'en', 'llar', 'par'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 9999, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-09 12:05:14,884:INFO:Checking exceptions
2023-05-09 12:05:14,885:INFO:Preparing display monitor
2023-05-09 12:05:14,895:INFO:Initializing AdaBoost Regressor
2023-05-09 12:05:14,895:INFO:Total runtime is 0.0 minutes
2023-05-09 12:05:14,895:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:14,897:INFO:Initializing create_model()
2023-05-09 12:05:14,897:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:14,897:INFO:Checking exceptions
2023-05-09 12:05:14,897:INFO:Importing libraries
2023-05-09 12:05:14,897:INFO:Copying training dataset
2023-05-09 12:05:14,899:INFO:Defining folds
2023-05-09 12:05:14,901:INFO:Declaring metric variables
2023-05-09 12:05:14,901:INFO:Importing untrained model
2023-05-09 12:05:14,901:INFO:AdaBoost Regressor Imported successfully
2023-05-09 12:05:14,901:INFO:Starting cross validation
2023-05-09 12:05:14,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:16,878:INFO:Calculating mean and std
2023-05-09 12:05:16,917:INFO:Creating metrics dataframe
2023-05-09 12:05:16,974:INFO:Uploading results into container
2023-05-09 12:05:16,974:INFO:Uploading model into container now
2023-05-09 12:05:16,975:INFO:_master_model_container: 1
2023-05-09 12:05:16,975:INFO:_display_container: 2
2023-05-09 12:05:16,975:INFO:AdaBoostRegressor(random_state=3130)
2023-05-09 12:05:16,975:INFO:create_model() successfully completed......................................
2023-05-09 12:05:17,052:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:17,052:INFO:Creating metrics dataframe
2023-05-09 12:05:17,095:INFO:Initializing Extra Trees Regressor
2023-05-09 12:05:17,096:INFO:Total runtime is 0.036688450972239176 minutes
2023-05-09 12:05:17,096:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:17,096:INFO:Initializing create_model()
2023-05-09 12:05:17,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:17,097:INFO:Checking exceptions
2023-05-09 12:05:17,097:INFO:Importing libraries
2023-05-09 12:05:17,097:INFO:Copying training dataset
2023-05-09 12:05:17,102:INFO:Defining folds
2023-05-09 12:05:17,102:INFO:Declaring metric variables
2023-05-09 12:05:17,102:INFO:Importing untrained model
2023-05-09 12:05:17,102:INFO:Extra Trees Regressor Imported successfully
2023-05-09 12:05:17,103:INFO:Starting cross validation
2023-05-09 12:05:17,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:21,270:INFO:Calculating mean and std
2023-05-09 12:05:21,271:INFO:Creating metrics dataframe
2023-05-09 12:05:21,330:INFO:Uploading results into container
2023-05-09 12:05:21,331:INFO:Uploading model into container now
2023-05-09 12:05:21,331:INFO:_master_model_container: 2
2023-05-09 12:05:21,331:INFO:_display_container: 2
2023-05-09 12:05:21,332:INFO:ExtraTreesRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:21,332:INFO:create_model() successfully completed......................................
2023-05-09 12:05:21,408:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:21,408:INFO:Creating metrics dataframe
2023-05-09 12:05:21,412:INFO:Initializing Light Gradient Boosting Machine
2023-05-09 12:05:21,412:INFO:Total runtime is 0.108613387743632 minutes
2023-05-09 12:05:21,412:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:21,413:INFO:Initializing create_model()
2023-05-09 12:05:21,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:21,413:INFO:Checking exceptions
2023-05-09 12:05:21,413:INFO:Importing libraries
2023-05-09 12:05:21,413:INFO:Copying training dataset
2023-05-09 12:05:21,416:INFO:Defining folds
2023-05-09 12:05:21,416:INFO:Declaring metric variables
2023-05-09 12:05:21,416:INFO:Importing untrained model
2023-05-09 12:05:21,417:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 12:05:21,417:INFO:Starting cross validation
2023-05-09 12:05:21,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:22,772:INFO:Calculating mean and std
2023-05-09 12:05:22,772:INFO:Creating metrics dataframe
2023-05-09 12:05:22,825:INFO:Uploading results into container
2023-05-09 12:05:22,826:INFO:Uploading model into container now
2023-05-09 12:05:22,826:INFO:_master_model_container: 3
2023-05-09 12:05:22,827:INFO:_display_container: 2
2023-05-09 12:05:22,827:INFO:LGBMRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:22,827:INFO:create_model() successfully completed......................................
2023-05-09 12:05:22,904:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:22,904:INFO:Creating metrics dataframe
2023-05-09 12:05:22,908:INFO:Initializing Gradient Boosting Regressor
2023-05-09 12:05:22,908:INFO:Total runtime is 0.1335554520289103 minutes
2023-05-09 12:05:22,910:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:22,910:INFO:Initializing create_model()
2023-05-09 12:05:22,910:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:22,910:INFO:Checking exceptions
2023-05-09 12:05:22,910:INFO:Importing libraries
2023-05-09 12:05:22,910:INFO:Copying training dataset
2023-05-09 12:05:22,913:INFO:Defining folds
2023-05-09 12:05:22,913:INFO:Declaring metric variables
2023-05-09 12:05:22,913:INFO:Importing untrained model
2023-05-09 12:05:22,914:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 12:05:22,914:INFO:Starting cross validation
2023-05-09 12:05:22,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:26,326:INFO:Calculating mean and std
2023-05-09 12:05:26,328:INFO:Creating metrics dataframe
2023-05-09 12:05:26,395:INFO:Uploading results into container
2023-05-09 12:05:26,395:INFO:Uploading model into container now
2023-05-09 12:05:26,396:INFO:_master_model_container: 4
2023-05-09 12:05:26,396:INFO:_display_container: 2
2023-05-09 12:05:26,396:INFO:GradientBoostingRegressor(random_state=3130)
2023-05-09 12:05:26,396:INFO:create_model() successfully completed......................................
2023-05-09 12:05:26,472:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:26,472:INFO:Creating metrics dataframe
2023-05-09 12:05:26,476:INFO:Initializing Linear Regression
2023-05-09 12:05:26,476:INFO:Total runtime is 0.19302342732747396 minutes
2023-05-09 12:05:26,476:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:26,476:INFO:Initializing create_model()
2023-05-09 12:05:26,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:26,478:INFO:Checking exceptions
2023-05-09 12:05:26,478:INFO:Importing libraries
2023-05-09 12:05:26,478:INFO:Copying training dataset
2023-05-09 12:05:26,480:INFO:Defining folds
2023-05-09 12:05:26,480:INFO:Declaring metric variables
2023-05-09 12:05:26,480:INFO:Importing untrained model
2023-05-09 12:05:26,480:INFO:Linear Regression Imported successfully
2023-05-09 12:05:26,481:INFO:Starting cross validation
2023-05-09 12:05:26,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:27,610:INFO:Calculating mean and std
2023-05-09 12:05:27,611:INFO:Creating metrics dataframe
2023-05-09 12:05:27,682:INFO:Uploading results into container
2023-05-09 12:05:27,683:INFO:Uploading model into container now
2023-05-09 12:05:27,684:INFO:_master_model_container: 5
2023-05-09 12:05:27,685:INFO:_display_container: 2
2023-05-09 12:05:27,685:INFO:LinearRegression(n_jobs=1)
2023-05-09 12:05:27,685:INFO:create_model() successfully completed......................................
2023-05-09 12:05:27,758:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:27,758:INFO:Creating metrics dataframe
2023-05-09 12:05:27,764:INFO:Initializing Random Forest Regressor
2023-05-09 12:05:27,764:INFO:Total runtime is 0.21448793808619182 minutes
2023-05-09 12:05:27,765:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:27,765:INFO:Initializing create_model()
2023-05-09 12:05:27,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:27,765:INFO:Checking exceptions
2023-05-09 12:05:27,765:INFO:Importing libraries
2023-05-09 12:05:27,765:INFO:Copying training dataset
2023-05-09 12:05:27,768:INFO:Defining folds
2023-05-09 12:05:27,768:INFO:Declaring metric variables
2023-05-09 12:05:27,768:INFO:Importing untrained model
2023-05-09 12:05:27,768:INFO:Random Forest Regressor Imported successfully
2023-05-09 12:05:27,770:INFO:Starting cross validation
2023-05-09 12:05:27,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:33,632:INFO:Calculating mean and std
2023-05-09 12:05:33,633:INFO:Creating metrics dataframe
2023-05-09 12:05:33,699:INFO:Uploading results into container
2023-05-09 12:05:33,700:INFO:Uploading model into container now
2023-05-09 12:05:33,700:INFO:_master_model_container: 6
2023-05-09 12:05:33,700:INFO:_display_container: 2
2023-05-09 12:05:33,701:INFO:RandomForestRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:33,701:INFO:create_model() successfully completed......................................
2023-05-09 12:05:33,777:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:33,777:INFO:Creating metrics dataframe
2023-05-09 12:05:33,781:INFO:Initializing Ridge Regression
2023-05-09 12:05:33,781:INFO:Total runtime is 0.3147719422976176 minutes
2023-05-09 12:05:33,782:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:33,782:INFO:Initializing create_model()
2023-05-09 12:05:33,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:33,782:INFO:Checking exceptions
2023-05-09 12:05:33,782:INFO:Importing libraries
2023-05-09 12:05:33,782:INFO:Copying training dataset
2023-05-09 12:05:33,785:INFO:Defining folds
2023-05-09 12:05:33,786:INFO:Declaring metric variables
2023-05-09 12:05:33,786:INFO:Importing untrained model
2023-05-09 12:05:33,786:INFO:Ridge Regression Imported successfully
2023-05-09 12:05:33,786:INFO:Starting cross validation
2023-05-09 12:05:33,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:34,920:INFO:Calculating mean and std
2023-05-09 12:05:34,921:INFO:Creating metrics dataframe
2023-05-09 12:05:34,991:INFO:Uploading results into container
2023-05-09 12:05:34,992:INFO:Uploading model into container now
2023-05-09 12:05:34,993:INFO:_master_model_container: 7
2023-05-09 12:05:34,993:INFO:_display_container: 2
2023-05-09 12:05:34,993:INFO:Ridge(random_state=3130)
2023-05-09 12:05:34,993:INFO:create_model() successfully completed......................................
2023-05-09 12:05:35,067:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:35,067:INFO:Creating metrics dataframe
2023-05-09 12:05:35,075:INFO:Initializing K Neighbors Regressor
2023-05-09 12:05:35,075:INFO:Total runtime is 0.3363373676935832 minutes
2023-05-09 12:05:35,075:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:35,075:INFO:Initializing create_model()
2023-05-09 12:05:35,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:35,075:INFO:Checking exceptions
2023-05-09 12:05:35,075:INFO:Importing libraries
2023-05-09 12:05:35,076:INFO:Copying training dataset
2023-05-09 12:05:35,080:INFO:Defining folds
2023-05-09 12:05:35,080:INFO:Declaring metric variables
2023-05-09 12:05:35,080:INFO:Importing untrained model
2023-05-09 12:05:35,080:INFO:K Neighbors Regressor Imported successfully
2023-05-09 12:05:35,081:INFO:Starting cross validation
2023-05-09 12:05:35,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:36,225:INFO:Calculating mean and std
2023-05-09 12:05:36,226:INFO:Creating metrics dataframe
2023-05-09 12:05:36,296:INFO:Uploading results into container
2023-05-09 12:05:36,297:INFO:Uploading model into container now
2023-05-09 12:05:36,297:INFO:_master_model_container: 8
2023-05-09 12:05:36,297:INFO:_display_container: 2
2023-05-09 12:05:36,298:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 12:05:36,298:INFO:create_model() successfully completed......................................
2023-05-09 12:05:36,371:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:36,371:INFO:Creating metrics dataframe
2023-05-09 12:05:36,375:INFO:Initializing Decision Tree Regressor
2023-05-09 12:05:36,375:INFO:Total runtime is 0.35800530115763346 minutes
2023-05-09 12:05:36,375:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:36,375:INFO:Initializing create_model()
2023-05-09 12:05:36,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:36,375:INFO:Checking exceptions
2023-05-09 12:05:36,375:INFO:Importing libraries
2023-05-09 12:05:36,375:INFO:Copying training dataset
2023-05-09 12:05:36,380:INFO:Defining folds
2023-05-09 12:05:36,380:INFO:Declaring metric variables
2023-05-09 12:05:36,380:INFO:Importing untrained model
2023-05-09 12:05:36,380:INFO:Decision Tree Regressor Imported successfully
2023-05-09 12:05:36,381:INFO:Starting cross validation
2023-05-09 12:05:36,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:37,511:INFO:Calculating mean and std
2023-05-09 12:05:37,512:INFO:Creating metrics dataframe
2023-05-09 12:05:37,580:INFO:Uploading results into container
2023-05-09 12:05:37,580:INFO:Uploading model into container now
2023-05-09 12:05:37,581:INFO:_master_model_container: 9
2023-05-09 12:05:37,581:INFO:_display_container: 2
2023-05-09 12:05:37,581:INFO:DecisionTreeRegressor(random_state=3130)
2023-05-09 12:05:37,581:INFO:create_model() successfully completed......................................
2023-05-09 12:05:37,655:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:37,655:INFO:Creating metrics dataframe
2023-05-09 12:05:37,659:INFO:Initializing Dummy Regressor
2023-05-09 12:05:37,659:INFO:Total runtime is 0.3794060230255127 minutes
2023-05-09 12:05:37,659:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:37,659:INFO:Initializing create_model()
2023-05-09 12:05:37,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:37,659:INFO:Checking exceptions
2023-05-09 12:05:37,659:INFO:Importing libraries
2023-05-09 12:05:37,659:INFO:Copying training dataset
2023-05-09 12:05:37,664:INFO:Defining folds
2023-05-09 12:05:37,664:INFO:Declaring metric variables
2023-05-09 12:05:37,664:INFO:Importing untrained model
2023-05-09 12:05:37,664:INFO:Dummy Regressor Imported successfully
2023-05-09 12:05:37,664:INFO:Starting cross validation
2023-05-09 12:05:37,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:38,764:INFO:Calculating mean and std
2023-05-09 12:05:38,764:INFO:Creating metrics dataframe
2023-05-09 12:05:38,830:INFO:Uploading results into container
2023-05-09 12:05:38,831:INFO:Uploading model into container now
2023-05-09 12:05:38,832:INFO:_master_model_container: 10
2023-05-09 12:05:38,832:INFO:_display_container: 2
2023-05-09 12:05:38,832:INFO:DummyRegressor()
2023-05-09 12:05:38,832:INFO:create_model() successfully completed......................................
2023-05-09 12:05:38,904:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:38,904:INFO:Creating metrics dataframe
2023-05-09 12:05:38,910:INFO:Initializing Least Angle Regression
2023-05-09 12:05:38,910:INFO:Total runtime is 0.40025132497151694 minutes
2023-05-09 12:05:38,910:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:38,910:INFO:Initializing create_model()
2023-05-09 12:05:38,910:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:38,910:INFO:Checking exceptions
2023-05-09 12:05:38,910:INFO:Importing libraries
2023-05-09 12:05:38,910:INFO:Copying training dataset
2023-05-09 12:05:38,914:INFO:Defining folds
2023-05-09 12:05:38,914:INFO:Declaring metric variables
2023-05-09 12:05:38,914:INFO:Importing untrained model
2023-05-09 12:05:38,914:INFO:Least Angle Regression Imported successfully
2023-05-09 12:05:38,914:INFO:Starting cross validation
2023-05-09 12:05:38,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:40,115:INFO:Calculating mean and std
2023-05-09 12:05:40,116:INFO:Creating metrics dataframe
2023-05-09 12:05:40,182:INFO:Uploading results into container
2023-05-09 12:05:40,183:INFO:Uploading model into container now
2023-05-09 12:05:40,183:INFO:_master_model_container: 11
2023-05-09 12:05:40,183:INFO:_display_container: 2
2023-05-09 12:05:40,184:INFO:Lars(random_state=3130)
2023-05-09 12:05:40,184:INFO:create_model() successfully completed......................................
2023-05-09 12:05:40,259:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:40,259:INFO:Creating metrics dataframe
2023-05-09 12:05:40,263:INFO:Initializing Bayesian Ridge
2023-05-09 12:05:40,263:INFO:Total runtime is 0.4228031357129415 minutes
2023-05-09 12:05:40,263:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:40,263:INFO:Initializing create_model()
2023-05-09 12:05:40,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:40,263:INFO:Checking exceptions
2023-05-09 12:05:40,263:INFO:Importing libraries
2023-05-09 12:05:40,263:INFO:Copying training dataset
2023-05-09 12:05:40,267:INFO:Defining folds
2023-05-09 12:05:40,267:INFO:Declaring metric variables
2023-05-09 12:05:40,267:INFO:Importing untrained model
2023-05-09 12:05:40,268:INFO:Bayesian Ridge Imported successfully
2023-05-09 12:05:40,268:INFO:Starting cross validation
2023-05-09 12:05:40,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:41,429:INFO:Calculating mean and std
2023-05-09 12:05:41,430:INFO:Creating metrics dataframe
2023-05-09 12:05:41,503:INFO:Uploading results into container
2023-05-09 12:05:41,503:INFO:Uploading model into container now
2023-05-09 12:05:41,504:INFO:_master_model_container: 12
2023-05-09 12:05:41,504:INFO:_display_container: 2
2023-05-09 12:05:41,505:INFO:BayesianRidge()
2023-05-09 12:05:41,505:INFO:create_model() successfully completed......................................
2023-05-09 12:05:41,581:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:41,581:INFO:Creating metrics dataframe
2023-05-09 12:05:41,586:INFO:Initializing Huber Regressor
2023-05-09 12:05:41,586:INFO:Total runtime is 0.44485371112823485 minutes
2023-05-09 12:05:41,587:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:41,587:INFO:Initializing create_model()
2023-05-09 12:05:41,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:41,587:INFO:Checking exceptions
2023-05-09 12:05:41,587:INFO:Importing libraries
2023-05-09 12:05:41,587:INFO:Copying training dataset
2023-05-09 12:05:41,592:INFO:Defining folds
2023-05-09 12:05:41,592:INFO:Declaring metric variables
2023-05-09 12:05:41,592:INFO:Importing untrained model
2023-05-09 12:05:41,592:INFO:Huber Regressor Imported successfully
2023-05-09 12:05:41,592:INFO:Starting cross validation
2023-05-09 12:05:41,593:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:41,706:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:41,777:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:41,900:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,027:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,150:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,294:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,459:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,591:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,731:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:42,893:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:43,054:INFO:Calculating mean and std
2023-05-09 12:05:43,054:INFO:Creating metrics dataframe
2023-05-09 12:05:43,152:INFO:Uploading results into container
2023-05-09 12:05:43,152:INFO:Uploading model into container now
2023-05-09 12:05:43,154:INFO:_master_model_container: 13
2023-05-09 12:05:43,154:INFO:_display_container: 2
2023-05-09 12:05:43,155:INFO:HuberRegressor()
2023-05-09 12:05:43,155:INFO:create_model() successfully completed......................................
2023-05-09 12:05:43,244:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:43,244:INFO:Creating metrics dataframe
2023-05-09 12:05:43,251:INFO:Initializing Orthogonal Matching Pursuit
2023-05-09 12:05:43,251:INFO:Total runtime is 0.472597599029541 minutes
2023-05-09 12:05:43,251:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:43,251:INFO:Initializing create_model()
2023-05-09 12:05:43,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:43,251:INFO:Checking exceptions
2023-05-09 12:05:43,251:INFO:Importing libraries
2023-05-09 12:05:43,251:INFO:Copying training dataset
2023-05-09 12:05:43,257:INFO:Defining folds
2023-05-09 12:05:43,257:INFO:Declaring metric variables
2023-05-09 12:05:43,257:INFO:Importing untrained model
2023-05-09 12:05:43,257:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 12:05:43,258:INFO:Starting cross validation
2023-05-09 12:05:43,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:44,403:INFO:Calculating mean and std
2023-05-09 12:05:44,403:INFO:Creating metrics dataframe
2023-05-09 12:05:44,470:INFO:Uploading results into container
2023-05-09 12:05:44,470:INFO:Uploading model into container now
2023-05-09 12:05:44,471:INFO:_master_model_container: 14
2023-05-09 12:05:44,471:INFO:_display_container: 2
2023-05-09 12:05:44,472:INFO:OrthogonalMatchingPursuit()
2023-05-09 12:05:44,472:INFO:create_model() successfully completed......................................
2023-05-09 12:05:44,546:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:44,546:INFO:Creating metrics dataframe
2023-05-09 12:05:44,551:INFO:Initializing Lasso Regression
2023-05-09 12:05:44,551:INFO:Total runtime is 0.49426395098368325 minutes
2023-05-09 12:05:44,551:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:44,552:INFO:Initializing create_model()
2023-05-09 12:05:44,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:44,552:INFO:Checking exceptions
2023-05-09 12:05:44,552:INFO:Importing libraries
2023-05-09 12:05:44,552:INFO:Copying training dataset
2023-05-09 12:05:44,555:INFO:Defining folds
2023-05-09 12:05:44,555:INFO:Declaring metric variables
2023-05-09 12:05:44,555:INFO:Importing untrained model
2023-05-09 12:05:44,555:INFO:Lasso Regression Imported successfully
2023-05-09 12:05:44,555:INFO:Starting cross validation
2023-05-09 12:05:44,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:45,759:INFO:Calculating mean and std
2023-05-09 12:05:45,760:INFO:Creating metrics dataframe
2023-05-09 12:05:45,834:INFO:Uploading results into container
2023-05-09 12:05:45,835:INFO:Uploading model into container now
2023-05-09 12:05:45,836:INFO:_master_model_container: 15
2023-05-09 12:05:45,836:INFO:_display_container: 2
2023-05-09 12:05:45,836:INFO:Lasso(random_state=3130)
2023-05-09 12:05:45,836:INFO:create_model() successfully completed......................................
2023-05-09 12:05:45,917:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:45,917:INFO:Creating metrics dataframe
2023-05-09 12:05:45,923:INFO:Initializing Elastic Net
2023-05-09 12:05:45,924:INFO:Total runtime is 0.517147692044576 minutes
2023-05-09 12:05:45,924:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:45,924:INFO:Initializing create_model()
2023-05-09 12:05:45,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:45,924:INFO:Checking exceptions
2023-05-09 12:05:45,924:INFO:Importing libraries
2023-05-09 12:05:45,924:INFO:Copying training dataset
2023-05-09 12:05:45,928:INFO:Defining folds
2023-05-09 12:05:45,928:INFO:Declaring metric variables
2023-05-09 12:05:45,929:INFO:Importing untrained model
2023-05-09 12:05:45,929:INFO:Elastic Net Imported successfully
2023-05-09 12:05:45,929:INFO:Starting cross validation
2023-05-09 12:05:45,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:47,128:INFO:Calculating mean and std
2023-05-09 12:05:47,128:INFO:Creating metrics dataframe
2023-05-09 12:05:47,198:INFO:Uploading results into container
2023-05-09 12:05:47,198:INFO:Uploading model into container now
2023-05-09 12:05:47,199:INFO:_master_model_container: 16
2023-05-09 12:05:47,199:INFO:_display_container: 2
2023-05-09 12:05:47,200:INFO:ElasticNet(random_state=3130)
2023-05-09 12:05:47,200:INFO:create_model() successfully completed......................................
2023-05-09 12:05:47,292:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:47,292:INFO:Creating metrics dataframe
2023-05-09 12:05:47,299:INFO:Initializing Lasso Least Angle Regression
2023-05-09 12:05:47,299:INFO:Total runtime is 0.5400615334510803 minutes
2023-05-09 12:05:47,299:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:47,299:INFO:Initializing create_model()
2023-05-09 12:05:47,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:47,299:INFO:Checking exceptions
2023-05-09 12:05:47,299:INFO:Importing libraries
2023-05-09 12:05:47,300:INFO:Copying training dataset
2023-05-09 12:05:47,304:INFO:Defining folds
2023-05-09 12:05:47,304:INFO:Declaring metric variables
2023-05-09 12:05:47,304:INFO:Importing untrained model
2023-05-09 12:05:47,305:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 12:05:47,305:INFO:Starting cross validation
2023-05-09 12:05:47,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:48,463:INFO:Calculating mean and std
2023-05-09 12:05:48,464:INFO:Creating metrics dataframe
2023-05-09 12:05:48,529:INFO:Uploading results into container
2023-05-09 12:05:48,529:INFO:Uploading model into container now
2023-05-09 12:05:48,530:INFO:_master_model_container: 17
2023-05-09 12:05:48,530:INFO:_display_container: 2
2023-05-09 12:05:48,530:INFO:LassoLars(random_state=3130)
2023-05-09 12:05:48,530:INFO:create_model() successfully completed......................................
2023-05-09 12:05:48,606:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:48,606:INFO:Creating metrics dataframe
2023-05-09 12:05:48,611:INFO:Initializing Passive Aggressive Regressor
2023-05-09 12:05:48,611:INFO:Total runtime is 0.5619257251421611 minutes
2023-05-09 12:05:48,611:INFO:SubProcess create_model() called ==================================
2023-05-09 12:05:48,611:INFO:Initializing create_model()
2023-05-09 12:05:48,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FC44A25820>, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:48,611:INFO:Checking exceptions
2023-05-09 12:05:48,611:INFO:Importing libraries
2023-05-09 12:05:48,611:INFO:Copying training dataset
2023-05-09 12:05:48,614:INFO:Defining folds
2023-05-09 12:05:48,614:INFO:Declaring metric variables
2023-05-09 12:05:48,615:INFO:Importing untrained model
2023-05-09 12:05:48,615:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 12:05:48,615:INFO:Starting cross validation
2023-05-09 12:05:48,616:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-09 12:05:49,719:INFO:Calculating mean and std
2023-05-09 12:05:49,719:INFO:Creating metrics dataframe
2023-05-09 12:05:49,785:INFO:Uploading results into container
2023-05-09 12:05:49,785:INFO:Uploading model into container now
2023-05-09 12:05:49,786:INFO:_master_model_container: 18
2023-05-09 12:05:49,786:INFO:_display_container: 2
2023-05-09 12:05:49,786:INFO:PassiveAggressiveRegressor(random_state=3130)
2023-05-09 12:05:49,786:INFO:create_model() successfully completed......................................
2023-05-09 12:05:49,864:INFO:SubProcess create_model() end ==================================
2023-05-09 12:05:49,864:INFO:Creating metrics dataframe
2023-05-09 12:05:49,872:INFO:Initializing create_model()
2023-05-09 12:05:49,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:49,873:INFO:Checking exceptions
2023-05-09 12:05:49,874:INFO:Importing libraries
2023-05-09 12:05:49,874:INFO:Copying training dataset
2023-05-09 12:05:49,877:INFO:Defining folds
2023-05-09 12:05:49,877:INFO:Declaring metric variables
2023-05-09 12:05:49,877:INFO:Importing untrained model
2023-05-09 12:05:49,877:INFO:Declaring custom model
2023-05-09 12:05:49,878:INFO:Extra Trees Regressor Imported successfully
2023-05-09 12:05:49,879:INFO:Cross validation set to False
2023-05-09 12:05:49,879:INFO:Fitting Model
2023-05-09 12:05:50,264:INFO:ExtraTreesRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:50,264:INFO:create_model() successfully completed......................................
2023-05-09 12:05:50,342:INFO:Initializing create_model()
2023-05-09 12:05:50,342:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=GradientBoostingRegressor(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:50,343:INFO:Checking exceptions
2023-05-09 12:05:50,343:INFO:Importing libraries
2023-05-09 12:05:50,343:INFO:Copying training dataset
2023-05-09 12:05:50,347:INFO:Defining folds
2023-05-09 12:05:50,347:INFO:Declaring metric variables
2023-05-09 12:05:50,347:INFO:Importing untrained model
2023-05-09 12:05:50,347:INFO:Declaring custom model
2023-05-09 12:05:50,348:INFO:Gradient Boosting Regressor Imported successfully
2023-05-09 12:05:50,348:INFO:Cross validation set to False
2023-05-09 12:05:50,348:INFO:Fitting Model
2023-05-09 12:05:50,672:INFO:GradientBoostingRegressor(random_state=3130)
2023-05-09 12:05:50,672:INFO:create_model() successfully completed......................................
2023-05-09 12:05:50,747:INFO:Initializing create_model()
2023-05-09 12:05:50,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=RandomForestRegressor(n_jobs=1, random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:50,747:INFO:Checking exceptions
2023-05-09 12:05:50,748:INFO:Importing libraries
2023-05-09 12:05:50,748:INFO:Copying training dataset
2023-05-09 12:05:50,751:INFO:Defining folds
2023-05-09 12:05:50,751:INFO:Declaring metric variables
2023-05-09 12:05:50,751:INFO:Importing untrained model
2023-05-09 12:05:50,751:INFO:Declaring custom model
2023-05-09 12:05:50,751:INFO:Random Forest Regressor Imported successfully
2023-05-09 12:05:50,752:INFO:Cross validation set to False
2023-05-09 12:05:50,752:INFO:Fitting Model
2023-05-09 12:05:51,321:INFO:RandomForestRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:51,322:INFO:create_model() successfully completed......................................
2023-05-09 12:05:51,395:INFO:Initializing create_model()
2023-05-09 12:05:51,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LGBMRegressor(n_jobs=1, random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:51,395:INFO:Checking exceptions
2023-05-09 12:05:51,396:INFO:Importing libraries
2023-05-09 12:05:51,396:INFO:Copying training dataset
2023-05-09 12:05:51,399:INFO:Defining folds
2023-05-09 12:05:51,399:INFO:Declaring metric variables
2023-05-09 12:05:51,399:INFO:Importing untrained model
2023-05-09 12:05:51,400:INFO:Declaring custom model
2023-05-09 12:05:51,400:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-09 12:05:51,401:INFO:Cross validation set to False
2023-05-09 12:05:51,401:INFO:Fitting Model
2023-05-09 12:05:51,519:INFO:LGBMRegressor(n_jobs=1, random_state=3130)
2023-05-09 12:05:51,519:INFO:create_model() successfully completed......................................
2023-05-09 12:05:51,592:INFO:Initializing create_model()
2023-05-09 12:05:51,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=AdaBoostRegressor(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:51,593:INFO:Checking exceptions
2023-05-09 12:05:51,594:INFO:Importing libraries
2023-05-09 12:05:51,594:INFO:Copying training dataset
2023-05-09 12:05:51,598:INFO:Defining folds
2023-05-09 12:05:51,598:INFO:Declaring metric variables
2023-05-09 12:05:51,598:INFO:Importing untrained model
2023-05-09 12:05:51,600:INFO:Declaring custom model
2023-05-09 12:05:51,600:INFO:str Imported successfully
2023-05-09 12:05:51,600:INFO:Cross validation set to False
2023-05-09 12:05:51,601:INFO:Fitting Model
2023-05-09 12:05:51,774:INFO:AdaBoostRegressor(random_state=3130)
2023-05-09 12:05:51,774:INFO:create_model() successfully completed......................................
2023-05-09 12:05:51,847:INFO:Initializing create_model()
2023-05-09 12:05:51,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=DecisionTreeRegressor(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:51,847:INFO:Checking exceptions
2023-05-09 12:05:51,848:INFO:Importing libraries
2023-05-09 12:05:51,848:INFO:Copying training dataset
2023-05-09 12:05:51,851:INFO:Defining folds
2023-05-09 12:05:51,851:INFO:Declaring metric variables
2023-05-09 12:05:51,852:INFO:Importing untrained model
2023-05-09 12:05:51,852:INFO:Declaring custom model
2023-05-09 12:05:51,852:INFO:Decision Tree Regressor Imported successfully
2023-05-09 12:05:51,854:INFO:Cross validation set to False
2023-05-09 12:05:51,854:INFO:Fitting Model
2023-05-09 12:05:51,954:INFO:DecisionTreeRegressor(random_state=3130)
2023-05-09 12:05:51,955:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,027:INFO:Initializing create_model()
2023-05-09 12:05:52,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Ridge(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,027:INFO:Checking exceptions
2023-05-09 12:05:52,030:INFO:Importing libraries
2023-05-09 12:05:52,030:INFO:Copying training dataset
2023-05-09 12:05:52,034:INFO:Defining folds
2023-05-09 12:05:52,034:INFO:Declaring metric variables
2023-05-09 12:05:52,034:INFO:Importing untrained model
2023-05-09 12:05:52,034:INFO:Declaring custom model
2023-05-09 12:05:52,035:INFO:Ridge Regression Imported successfully
2023-05-09 12:05:52,035:INFO:Cross validation set to False
2023-05-09 12:05:52,036:INFO:Fitting Model
2023-05-09 12:05:52,133:INFO:Ridge(random_state=3130)
2023-05-09 12:05:52,133:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,209:INFO:Initializing create_model()
2023-05-09 12:05:52,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LinearRegression(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,209:INFO:Checking exceptions
2023-05-09 12:05:52,209:INFO:Importing libraries
2023-05-09 12:05:52,209:INFO:Copying training dataset
2023-05-09 12:05:52,212:INFO:Defining folds
2023-05-09 12:05:52,212:INFO:Declaring metric variables
2023-05-09 12:05:52,212:INFO:Importing untrained model
2023-05-09 12:05:52,212:INFO:Declaring custom model
2023-05-09 12:05:52,212:INFO:Linear Regression Imported successfully
2023-05-09 12:05:52,214:INFO:Cross validation set to False
2023-05-09 12:05:52,214:INFO:Fitting Model
2023-05-09 12:05:52,305:INFO:LinearRegression(n_jobs=1)
2023-05-09 12:05:52,305:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,381:INFO:Initializing create_model()
2023-05-09 12:05:52,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Lars(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,381:INFO:Checking exceptions
2023-05-09 12:05:52,382:INFO:Importing libraries
2023-05-09 12:05:52,382:INFO:Copying training dataset
2023-05-09 12:05:52,387:INFO:Defining folds
2023-05-09 12:05:52,387:INFO:Declaring metric variables
2023-05-09 12:05:52,388:INFO:Importing untrained model
2023-05-09 12:05:52,388:INFO:Declaring custom model
2023-05-09 12:05:52,388:INFO:Least Angle Regression Imported successfully
2023-05-09 12:05:52,389:INFO:Cross validation set to False
2023-05-09 12:05:52,389:INFO:Fitting Model
2023-05-09 12:05:52,485:INFO:Lars(random_state=3130)
2023-05-09 12:05:52,485:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,560:INFO:Initializing create_model()
2023-05-09 12:05:52,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,561:INFO:Checking exceptions
2023-05-09 12:05:52,561:INFO:Importing libraries
2023-05-09 12:05:52,561:INFO:Copying training dataset
2023-05-09 12:05:52,566:INFO:Defining folds
2023-05-09 12:05:52,567:INFO:Declaring metric variables
2023-05-09 12:05:52,567:INFO:Importing untrained model
2023-05-09 12:05:52,567:INFO:Declaring custom model
2023-05-09 12:05:52,568:INFO:Bayesian Ridge Imported successfully
2023-05-09 12:05:52,568:INFO:Cross validation set to False
2023-05-09 12:05:52,569:INFO:Fitting Model
2023-05-09 12:05:52,665:INFO:BayesianRidge()
2023-05-09 12:05:52,665:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,740:INFO:Initializing create_model()
2023-05-09 12:05:52,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ElasticNet(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,740:INFO:Checking exceptions
2023-05-09 12:05:52,741:INFO:Importing libraries
2023-05-09 12:05:52,741:INFO:Copying training dataset
2023-05-09 12:05:52,744:INFO:Defining folds
2023-05-09 12:05:52,744:INFO:Declaring metric variables
2023-05-09 12:05:52,744:INFO:Importing untrained model
2023-05-09 12:05:52,744:INFO:Declaring custom model
2023-05-09 12:05:52,745:INFO:Elastic Net Imported successfully
2023-05-09 12:05:52,747:INFO:Cross validation set to False
2023-05-09 12:05:52,747:INFO:Fitting Model
2023-05-09 12:05:52,845:INFO:ElasticNet(random_state=3130)
2023-05-09 12:05:52,845:INFO:create_model() successfully completed......................................
2023-05-09 12:05:52,920:INFO:Initializing create_model()
2023-05-09 12:05:52,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Lasso(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:52,920:INFO:Checking exceptions
2023-05-09 12:05:52,921:INFO:Importing libraries
2023-05-09 12:05:52,921:INFO:Copying training dataset
2023-05-09 12:05:52,924:INFO:Defining folds
2023-05-09 12:05:52,924:INFO:Declaring metric variables
2023-05-09 12:05:52,925:INFO:Importing untrained model
2023-05-09 12:05:52,925:INFO:Declaring custom model
2023-05-09 12:05:52,925:INFO:Lasso Regression Imported successfully
2023-05-09 12:05:52,926:INFO:Cross validation set to False
2023-05-09 12:05:52,926:INFO:Fitting Model
2023-05-09 12:05:53,075:INFO:Lasso(random_state=3130)
2023-05-09 12:05:53,075:INFO:create_model() successfully completed......................................
2023-05-09 12:05:53,152:INFO:Initializing create_model()
2023-05-09 12:05:53,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LassoLars(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:53,152:INFO:Checking exceptions
2023-05-09 12:05:53,153:INFO:Importing libraries
2023-05-09 12:05:53,153:INFO:Copying training dataset
2023-05-09 12:05:53,155:INFO:Defining folds
2023-05-09 12:05:53,155:INFO:Declaring metric variables
2023-05-09 12:05:53,155:INFO:Importing untrained model
2023-05-09 12:05:53,155:INFO:Declaring custom model
2023-05-09 12:05:53,156:INFO:Lasso Least Angle Regression Imported successfully
2023-05-09 12:05:53,156:INFO:Cross validation set to False
2023-05-09 12:05:53,156:INFO:Fitting Model
2023-05-09 12:05:53,256:INFO:LassoLars(random_state=3130)
2023-05-09 12:05:53,256:INFO:create_model() successfully completed......................................
2023-05-09 12:05:53,332:INFO:Initializing create_model()
2023-05-09 12:05:53,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:53,332:INFO:Checking exceptions
2023-05-09 12:05:53,334:INFO:Importing libraries
2023-05-09 12:05:53,334:INFO:Copying training dataset
2023-05-09 12:05:53,338:INFO:Defining folds
2023-05-09 12:05:53,338:INFO:Declaring metric variables
2023-05-09 12:05:53,338:INFO:Importing untrained model
2023-05-09 12:05:53,338:INFO:Declaring custom model
2023-05-09 12:05:53,338:INFO:Huber Regressor Imported successfully
2023-05-09 12:05:53,339:INFO:Cross validation set to False
2023-05-09 12:05:53,339:INFO:Fitting Model
2023-05-09 12:05:53,398:WARNING:C:\Users\14357\DOCUME~1\VIRTUA~1\STRESS~3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-09 12:05:53,458:INFO:HuberRegressor()
2023-05-09 12:05:53,458:INFO:create_model() successfully completed......................................
2023-05-09 12:05:53,533:INFO:Initializing create_model()
2023-05-09 12:05:53,533:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=KNeighborsRegressor(n_jobs=1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:53,533:INFO:Checking exceptions
2023-05-09 12:05:53,534:INFO:Importing libraries
2023-05-09 12:05:53,534:INFO:Copying training dataset
2023-05-09 12:05:53,537:INFO:Defining folds
2023-05-09 12:05:53,538:INFO:Declaring metric variables
2023-05-09 12:05:53,538:INFO:Importing untrained model
2023-05-09 12:05:53,538:INFO:Declaring custom model
2023-05-09 12:05:53,538:INFO:K Neighbors Regressor Imported successfully
2023-05-09 12:05:53,539:INFO:Cross validation set to False
2023-05-09 12:05:53,539:INFO:Fitting Model
2023-05-09 12:05:53,637:INFO:KNeighborsRegressor(n_jobs=1)
2023-05-09 12:05:53,637:INFO:create_model() successfully completed......................................
2023-05-09 12:05:53,718:INFO:Initializing create_model()
2023-05-09 12:05:53,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:53,718:INFO:Checking exceptions
2023-05-09 12:05:53,718:INFO:Importing libraries
2023-05-09 12:05:53,718:INFO:Copying training dataset
2023-05-09 12:05:53,723:INFO:Defining folds
2023-05-09 12:05:53,723:INFO:Declaring metric variables
2023-05-09 12:05:53,723:INFO:Importing untrained model
2023-05-09 12:05:53,723:INFO:Declaring custom model
2023-05-09 12:05:53,724:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-09 12:05:53,724:INFO:Cross validation set to False
2023-05-09 12:05:53,724:INFO:Fitting Model
2023-05-09 12:05:53,819:INFO:OrthogonalMatchingPursuit()
2023-05-09 12:05:53,819:INFO:create_model() successfully completed......................................
2023-05-09 12:05:53,893:INFO:Initializing create_model()
2023-05-09 12:05:53,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=PassiveAggressiveRegressor(random_state=3130), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:53,893:INFO:Checking exceptions
2023-05-09 12:05:53,894:INFO:Importing libraries
2023-05-09 12:05:53,894:INFO:Copying training dataset
2023-05-09 12:05:53,898:INFO:Defining folds
2023-05-09 12:05:53,898:INFO:Declaring metric variables
2023-05-09 12:05:53,899:INFO:Importing untrained model
2023-05-09 12:05:53,899:INFO:Declaring custom model
2023-05-09 12:05:53,899:INFO:Passive Aggressive Regressor Imported successfully
2023-05-09 12:05:53,900:INFO:Cross validation set to False
2023-05-09 12:05:53,900:INFO:Fitting Model
2023-05-09 12:05:54,005:INFO:PassiveAggressiveRegressor(random_state=3130)
2023-05-09 12:05:54,005:INFO:create_model() successfully completed......................................
2023-05-09 12:05:54,078:INFO:Initializing create_model()
2023-05-09 12:05:54,078:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-09 12:05:54,078:INFO:Checking exceptions
2023-05-09 12:05:54,079:INFO:Importing libraries
2023-05-09 12:05:54,079:INFO:Copying training dataset
2023-05-09 12:05:54,083:INFO:Defining folds
2023-05-09 12:05:54,084:INFO:Declaring metric variables
2023-05-09 12:05:54,084:INFO:Importing untrained model
2023-05-09 12:05:54,084:INFO:Declaring custom model
2023-05-09 12:05:54,085:INFO:Dummy Regressor Imported successfully
2023-05-09 12:05:54,086:INFO:Cross validation set to False
2023-05-09 12:05:54,086:INFO:Fitting Model
2023-05-09 12:05:54,175:INFO:DummyRegressor()
2023-05-09 12:05:54,175:INFO:create_model() successfully completed......................................
2023-05-09 12:05:54,253:INFO:_master_model_container: 18
2023-05-09 12:05:54,253:INFO:_display_container: 2
2023-05-09 12:05:54,255:INFO:[ExtraTreesRegressor(n_jobs=1, random_state=3130), GradientBoostingRegressor(random_state=3130), RandomForestRegressor(n_jobs=1, random_state=3130), LGBMRegressor(n_jobs=1, random_state=3130), AdaBoostRegressor(random_state=3130), DecisionTreeRegressor(random_state=3130), Ridge(random_state=3130), LinearRegression(n_jobs=1), Lars(random_state=3130), BayesianRidge(), ElasticNet(random_state=3130), Lasso(random_state=3130), LassoLars(random_state=3130), HuberRegressor(), KNeighborsRegressor(n_jobs=1), OrthogonalMatchingPursuit(), PassiveAggressiveRegressor(random_state=3130), DummyRegressor()]
2023-05-09 12:05:54,255:INFO:compare_models() successfully completed......................................
2023-05-09 12:05:54,311:INFO:Initializing predict_model()
2023-05-09 12:05:54,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ExtraTreesRegressor(n_jobs=1, random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,311:INFO:Checking exceptions
2023-05-09 12:05:54,311:INFO:Preloading libraries
2023-05-09 12:05:54,311:INFO:Set up data.
2023-05-09 12:05:54,318:INFO:Set up index.
2023-05-09 12:05:54,432:INFO:Initializing predict_model()
2023-05-09 12:05:54,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=GradientBoostingRegressor(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,432:INFO:Checking exceptions
2023-05-09 12:05:54,432:INFO:Preloading libraries
2023-05-09 12:05:54,433:INFO:Set up data.
2023-05-09 12:05:54,438:INFO:Set up index.
2023-05-09 12:05:54,545:INFO:Initializing predict_model()
2023-05-09 12:05:54,545:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=RandomForestRegressor(n_jobs=1, random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,545:INFO:Checking exceptions
2023-05-09 12:05:54,545:INFO:Preloading libraries
2023-05-09 12:05:54,545:INFO:Set up data.
2023-05-09 12:05:54,551:INFO:Set up index.
2023-05-09 12:05:54,669:INFO:Initializing predict_model()
2023-05-09 12:05:54,669:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LGBMRegressor(n_jobs=1, random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,669:INFO:Checking exceptions
2023-05-09 12:05:54,669:INFO:Preloading libraries
2023-05-09 12:05:54,670:INFO:Set up data.
2023-05-09 12:05:54,676:INFO:Set up index.
2023-05-09 12:05:54,843:INFO:Initializing predict_model()
2023-05-09 12:05:54,844:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=AdaBoostRegressor(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,844:INFO:Checking exceptions
2023-05-09 12:05:54,844:INFO:Preloading libraries
2023-05-09 12:05:54,844:INFO:Set up data.
2023-05-09 12:05:54,850:INFO:Set up index.
2023-05-09 12:05:54,962:INFO:Initializing predict_model()
2023-05-09 12:05:54,962:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=DecisionTreeRegressor(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:54,963:INFO:Checking exceptions
2023-05-09 12:05:54,963:INFO:Preloading libraries
2023-05-09 12:05:54,963:INFO:Set up data.
2023-05-09 12:05:54,970:INFO:Set up index.
2023-05-09 12:05:55,078:INFO:Initializing predict_model()
2023-05-09 12:05:55,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Ridge(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,079:INFO:Checking exceptions
2023-05-09 12:05:55,079:INFO:Preloading libraries
2023-05-09 12:05:55,079:INFO:Set up data.
2023-05-09 12:05:55,085:INFO:Set up index.
2023-05-09 12:05:55,196:INFO:Initializing predict_model()
2023-05-09 12:05:55,196:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LinearRegression(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,196:INFO:Checking exceptions
2023-05-09 12:05:55,196:INFO:Preloading libraries
2023-05-09 12:05:55,196:INFO:Set up data.
2023-05-09 12:05:55,203:INFO:Set up index.
2023-05-09 12:05:55,315:INFO:Initializing predict_model()
2023-05-09 12:05:55,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Lars(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,315:INFO:Checking exceptions
2023-05-09 12:05:55,315:INFO:Preloading libraries
2023-05-09 12:05:55,315:INFO:Set up data.
2023-05-09 12:05:55,321:INFO:Set up index.
2023-05-09 12:05:55,429:INFO:Initializing predict_model()
2023-05-09 12:05:55,429:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,429:INFO:Checking exceptions
2023-05-09 12:05:55,429:INFO:Preloading libraries
2023-05-09 12:05:55,429:INFO:Set up data.
2023-05-09 12:05:55,434:INFO:Set up index.
2023-05-09 12:05:55,540:INFO:Initializing predict_model()
2023-05-09 12:05:55,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=ElasticNet(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,540:INFO:Checking exceptions
2023-05-09 12:05:55,540:INFO:Preloading libraries
2023-05-09 12:05:55,540:INFO:Set up data.
2023-05-09 12:05:55,546:INFO:Set up index.
2023-05-09 12:05:55,656:INFO:Initializing predict_model()
2023-05-09 12:05:55,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=Lasso(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,656:INFO:Checking exceptions
2023-05-09 12:05:55,656:INFO:Preloading libraries
2023-05-09 12:05:55,656:INFO:Set up data.
2023-05-09 12:05:55,664:INFO:Set up index.
2023-05-09 12:05:55,773:INFO:Initializing predict_model()
2023-05-09 12:05:55,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=LassoLars(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,774:INFO:Checking exceptions
2023-05-09 12:05:55,774:INFO:Preloading libraries
2023-05-09 12:05:55,774:INFO:Set up data.
2023-05-09 12:05:55,781:INFO:Set up index.
2023-05-09 12:05:55,890:INFO:Initializing predict_model()
2023-05-09 12:05:55,890:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:55,890:INFO:Checking exceptions
2023-05-09 12:05:55,890:INFO:Preloading libraries
2023-05-09 12:05:55,890:INFO:Set up data.
2023-05-09 12:05:55,896:INFO:Set up index.
2023-05-09 12:05:56,005:INFO:Initializing predict_model()
2023-05-09 12:05:56,005:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=KNeighborsRegressor(n_jobs=1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:56,005:INFO:Checking exceptions
2023-05-09 12:05:56,005:INFO:Preloading libraries
2023-05-09 12:05:56,005:INFO:Set up data.
2023-05-09 12:05:56,011:INFO:Set up index.
2023-05-09 12:05:56,168:INFO:Initializing predict_model()
2023-05-09 12:05:56,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:56,168:INFO:Checking exceptions
2023-05-09 12:05:56,168:INFO:Preloading libraries
2023-05-09 12:05:56,168:INFO:Set up data.
2023-05-09 12:05:56,173:INFO:Set up index.
2023-05-09 12:05:56,287:INFO:Initializing predict_model()
2023-05-09 12:05:56,287:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=PassiveAggressiveRegressor(random_state=3130), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:56,287:INFO:Checking exceptions
2023-05-09 12:05:56,287:INFO:Preloading libraries
2023-05-09 12:05:56,287:INFO:Set up data.
2023-05-09 12:05:56,293:INFO:Set up index.
2023-05-09 12:05:56,401:INFO:Initializing predict_model()
2023-05-09 12:05:56,401:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FC438AFFA0>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FC1A282EE0>)
2023-05-09 12:05:56,401:INFO:Checking exceptions
2023-05-09 12:05:56,401:INFO:Preloading libraries
2023-05-09 12:05:56,401:INFO:Set up data.
2023-05-09 12:05:56,407:INFO:Set up index.
